{"version":3,"sources":["components/UI/Navbar/Navbar.jsx","config/config.js","redux/actions/dataActions.js","redux/actions/types.js","components/UI/Button/Button.jsx","components/Characters/Card/Card.jsx","components/UI/Loader/Loader.jsx","components/Characters/List/List.jsx","components/UI/SearchInput/SearchInput.jsx","components/common/searchInputContainer/searchInputContainer.jsx","components/Characters/Detailed/Card/Card.jsx","screens/Characters/List/List.jsx","components/UI/Popup/Popup.jsx","components/Characters/Detailed/Character.jsx","components/UI/Footer/Footer.jsx","redux/reducers/dataReducer.js","redux/reducers/index.js","redux/store/store.js","components/Comics/Card/Card.jsx","components/Comics/List/List.jsx","components/Comics/Detailed/Card/Card.jsx","screens/Comics/List/List.jsx","components/Comics/Detailed/Comic.jsx","components/Creators/Card/Card.jsx","components/Creators/List/List.jsx","components/Creators/Detailed/Card/Card.jsx","screens/Creators/List/List.jsx","components/Creators/Detailed/Creator.jsx","components/Events/Card/Card.jsx","components/Events/List/List.jsx","components/Events/Detailed/Card/Card.jsx","screens/Events/List/List.jsx","components/Events/Detailed/Event.jsx","components/Stories/Card/Card.jsx","components/Stories/List/List.jsx","components/Stories/Detailed/Card/Card.jsx","screens/Stories/List/List.jsx","components/Stories/Detailed/Story.jsx","components/Series/Card/Card.jsx","components/Series/List/List.jsx","components/Series/Detailed/Card/Card.jsx","screens/Series/List/List.jsx","components/Series/Detailed/Series.jsx","screens/Root.jsx","App.js","registerServiceWorker.js","index.js","components/UI/Navbar/Navbar.module.css"],"names":["Navbar","props","react_default","a","createElement","className","styles","Link","to","text","crypto","require","ts","Date","getTime","hash","MD5","toString","fetchData","name","origOptions","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","defaultOptions","options","currentOffset","response","data","results","totalPages","wrap","_context","prev","next","page","count","assign","undefined","fetch","concat","API_KEY","sent","json","total","type","stop","this","_x","apply","arguments","fetchSingleItem","id","_ref2","_callee2","_context2","_x2","fetchAdditionalData","_ref4","_callee4","_context4","_x4","Button","external","href","link","target","rel","CharactersCard","character","src","thumbnail","path","extension","alt","Button_Button","Loader","CharactersList","window","scrollTo","_this","_this$props","characters","map","Card_CharactersCard","key","Loader_Loader_Loader","rc_pagination_es","current","pageSize","onChange","Component","connect","state","SearchInput","value","onChangeValue","onSubmit","e","searchInputContainer","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","inputValue","setState","preventDefault","fetchSearchedData","_this2","SearchInput_SearchInput","searched","_ref3","_callee3","_context3","_x3","DetailedCard","onGetData","comics","available","items","comic","onClick","resourceURI","urls","length","url","events","event","series","stories","story","Popup","info","onClosePopup","title","fullName","description","Character","popupOpen","match","RegExp","exec","additional","Card_DetailedCard","Popup_Popup_Popup","Footer","item","initialState","combineReducers","action","objectSpread","filter","middleware","thunk","store","createStore","rootReducer","applyMiddleware","ComicsCard","ComicsList","Card_ComicsCard","format","pageCount","issueNumber","i","Comic","Card_Card_DetailedCard","CreatorsCard","creator","CreatorsList","creators","Card_CreatorsCard","Creator","Detailed_Card_Card_DetailedCard","EventsCard","EventsList","Card_EventsCard","role","Event","Events_Detailed_Card_Card_DetailedCard","StoriesCard","StoriesList","Card_StoriesCard","style","margin","originalIssue","Story","Stories_Detailed_Card_Card_DetailedCard","SeriesCard","SeriesList","Card_SeriesCard","Series","Series_Detailed_Card_Card_DetailedCard","ScreensRoot","es","Footer_Footer_Footer","process","App","Root_ScreensRoot","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","BrowserRouter","basename","src_App","document","getElementById","URL","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports","app__nav"],"mappings":"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","file":"static/js/main.1b6dee47.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport styles from './Navbar.module.css';\r\n\r\nexport const Navbar = (props) => (\r\n    <nav className={styles['app__nav']}>\r\n        <Link to=\"/\">Home</Link>\r\n        <h1>{props.text}</h1>\r\n    </nav>\r\n);\r\n\r\nNavbar.propTypes = {\r\n    text: PropTypes.string.isRequired\r\n};","const crypto = require('crypto-js');\r\n\r\nconst REACT_APP_MARVEL_API_PUBLIC_KEY = 'cc69f3ca3348ebf33c9c570217237713';\r\nconst REACT_APP_MARVEL_API_PRIVATE_KEY = '1abaad9e0d86c7a4c014a81caaf3e39ee3213bbb';\r\n\r\nexport let ts = new Date().getTime();\r\nexport let hash = crypto.MD5(ts + REACT_APP_MARVEL_API_PRIVATE_KEY + REACT_APP_MARVEL_API_PUBLIC_KEY).toString();","import { FETCH_DATA_ACTION, FETCH_SINGLE_ITEM_ACTION, FETCH_SEARCHED_DATA_ACTION, FETCH_ADDITIONAL_INFO_ACTION } from './types';\r\n\r\nimport { API_KEY } from '../../App'\r\n\r\nimport { hash, ts } from '../../config/config';\r\n\r\nexport const fetchData = (name, origOptions) => async dispatch => {\r\n    const defaultOptions = { page: 0, count: 20 }\r\n    const options = Object.assign(defaultOptions, origOptions)\r\n\r\n    const currentOffset = options.page === undefined ? 0 : (options.count * (options.page - 1));\r\n\r\n    const response = await fetch(`https://gateway.marvel.com/v1/public/${name}?apikey=${API_KEY}&ts=${ts}&hash=${hash}&offset=${currentOffset}`);\r\n    const data = await response.json();\r\n    const results = await data.data.results;\r\n    const totalPages = await data.data.total;\r\n\r\n    Object.assign(options, {totalPages})\r\n\r\n    dispatch({\r\n        type: FETCH_DATA_ACTION,\r\n        data: results,\r\n        options\r\n    });\r\n}\r\n\r\nexport const fetchSingleItem = (name, id) => async dispatch => {\r\n    const response = await fetch(`https://gateway.marvel.com/v1/public/${name}/${id}?apikey=${API_KEY}&ts=${ts}&hash=${hash}`);\r\n    const data = await response.json();\r\n    const results = await data.data.results[0];\r\n\r\n    dispatch({\r\n        type: FETCH_SINGLE_ITEM_ACTION,\r\n        data: results\r\n    });\r\n}\r\n\r\nexport const fetchSearchedData = (type, name) => async dispatch => {\r\n    const response = await fetch(`https://gateway.marvel.com/v1/public/${type}?name=${name}&apikey=${API_KEY}&ts=${ts}&hash=${hash}`);\r\n    const data = await response.json();\r\n    const results = await data.data.results[0];\r\n\r\n    dispatch({\r\n        type: FETCH_SEARCHED_DATA_ACTION,\r\n        data: results\r\n    });\r\n};\r\n\r\nexport const fetchAdditionalData = (name, id) => async dispatch => {\r\n    const response = await fetch(`https://gateway.marvel.com/v1/public/${name}/${id}?apikey=${API_KEY}&ts=${ts}&hash=${hash}`);\r\n    const data = await response.json();\r\n    const results = await data.data.results[0];\r\n\r\n    dispatch({\r\n        type: FETCH_ADDITIONAL_INFO_ACTION,\r\n        data: results\r\n    });\r\n}","export const FETCH_DATA_ACTION = 'FETCH_DATA_ACTION';\r\nexport const FETCH_SINGLE_ITEM_ACTION = 'FETCH_SINGLE_ITEM_ACTION';\r\nexport const FETCH_SEARCHED_DATA_ACTION = 'FETCH_SEARCHED_DATA_ACTION';\r\nexport const FETCH_ADDITIONAL_INFO_ACTION = 'FETCH_ADDITIONAL_INFO_ACTION';","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Button = (props) => (\r\n    <div>\r\n    {props.external ? <a href={props.link} className=\"btn red darken-3 waves-effect\" target=\"_blank\" rel=\"noopener noreferrer\">{props.text}</a> :\r\n    <Link to={props.link} className=\"btn red darken-3 waves-effect\" target={props.target}>{props.text}</Link>}\r\n    </div>\r\n);\r\n\r\nButton.propTypes = {\r\n    link: PropTypes.string.isRequired,\r\n    text: PropTypes.string.isRequired\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Button } from '../../UI/Button/Button';\r\n\r\nexport const CharactersCard = ({character}) => (\r\n    <div className=\"col s12 m6 l3\">\r\n        <div className=\"card\">\r\n            <div className=\"card-image\">\r\n                <img src={`${character.thumbnail.path}/landscape_incredible.${character.thumbnail.extension}`} alt={character.name}></img>\r\n                <span className='card-title'>{character.name}</span>\r\n            </div>\r\n            <div className='card-action'>\r\n                <Button text={'Learn More'} link ={`characters/${character.id}`}></Button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nCharactersCard.propTypes = {\r\n    character: PropTypes.object.isRequired\r\n};\r\n","import React from 'react';\r\n\r\nimport './Loader.css';\r\n\r\nexport const Loader = () => (\r\n    <div className=\"loader\"></div>\r\n);","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { fetchData } from '../../../redux/actions/dataActions';\r\n\r\nimport { CharactersCard }  from '../Card/Card';\r\nimport { Loader } from '../../UI/Loader/Loader.jsx';\r\n \r\nimport Pagination from 'rc-pagination';\r\nimport 'rc-pagination/assets/index.css';\r\n\r\n\r\nclass CharactersList extends Component {\r\n    componentDidMount() {\r\n        this.fetchData();\r\n    }\r\n    fetchData(page) {\r\n        this.props.fetchData('characters', { page });\r\n        window.scrollTo(0, 0);\r\n    }\r\n    render() {\r\n        const { characters, options } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"row\">{characters ? characters.map((character) => {\r\n                    return <CharactersCard character={character} key={character.id}/>;\r\n                }) : <Loader />}</div>\r\n                {options.count && <Pagination current={options.page || 1} total={options.totalPages} pageSize={options.count} onChange={(page) => this.fetchData(page)}/>};\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCharactersList.propTypes = {\r\n    fetchData: PropTypes.func.isRequired,\r\n    characters: PropTypes.array.isRequired,\r\n    options: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    characters: state.data.data,\r\n    options: state.data.options\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchData })(CharactersList);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const SearchInput = ({value, onChangeValue, onSubmit}) => (\r\n    <div className=\"input-field\">\r\n        <form onSubmit={(e) => onSubmit(e)}>\r\n            <input id=\"search\" type=\"text\" value={value} onChange={(e) => onChangeValue(e)}></input>\r\n            <button type=\"submit\" className=\"btn waves-effect\">Search</button>\r\n        </form>\r\n    </div>\r\n);\r\n\r\nSearchInput.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChangeValue: PropTypes.func.isRequired,\r\n    onSubmit: PropTypes.func.isRequired\r\n};","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { fetchSearchedData, fetchData } from '../../../redux/actions/dataActions';\r\n\r\nimport { SearchInput } from '../../UI/SearchInput/SearchInput';\r\n\r\nclass searchInputContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            inputValue: ''\r\n        };\r\n    }\r\n    onChangeValue(e) {\r\n        this.setState({\r\n            inputValue: e.target.value\r\n        });\r\n        if(!e.target.value) {\r\n            this.props.fetchData(this.props.type);\r\n        }\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        this.props.fetchSearchedData(this.props.type, this.state.inputValue);\r\n    }\r\n    render() {\r\n        return (\r\n            <SearchInput value={this.state.inputValue} onChangeValue={(e) => this.onChangeValue(e)} onSubmit={(e) => this.onSubmit(e)}/>\r\n        );\r\n    }\r\n}\r\n\r\nsearchInputContainer.propTypes = {\r\n    fetchSearchedData: PropTypes.func.isRequired,\r\n    fetchData: PropTypes.func.isRequired,\r\n    searched: PropTypes.array,\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    searched: state.data.data\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchSearchedData, fetchData })(searchInputContainer);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Card.css';\r\n\r\nimport { Button } from '../../../UI/Button/Button';\r\n\r\nexport const DetailedCard = ({character, onGetData}) => (\r\n    <div className=\"row\">\r\n        <div className=\"col s12 m6\">\r\n            <h4>{character.name}</h4>\r\n            <div className=\"character__image\">\r\n                <img src={`${character.thumbnail.path}.${character.thumbnail.extension}`} alt={character.name}></img>\r\n            </div>\r\n            {!!character.comics.available && <div className=\"comics\">\r\n                <ul className=\"collection with-header\">\r\n                    <li className=\"collection-header\"><h4>Comics</h4></li>\r\n                    {character.comics.items.map(comic => {\r\n                        return (<a href='!#' onClick={(e) => onGetData(comic.resourceURI, 'comics', e)} className=\"collection-item\" key={comic.name}>{comic.name}</a>);\r\n                    })}\r\n                </ul>\r\n            </div>}\r\n            {!!character.urls && !!character.urls.length && <div>\r\n                <div className=\"character__actions\">\r\n                    {character.urls.map(url => {\r\n                        return <Button text={url.type} link={url.url} key={url.url} external={true}></Button>;\r\n                    })}\r\n                </div>\r\n            </div>}\r\n        </div>\r\n        <div className=\"col s12 m6\">\r\n            {!!character.events.available && <div className=\"events\">\r\n                <ul className=\"collection with-header\">\r\n                    <li className=\"collection-header\"><h4>Events</h4></li>\r\n                    {character.events.items.map(event => {\r\n                        return (<a href=\"!#\" onClick={(e) => onGetData(event.resourceURI, 'events', e)} className=\"collection-item\" key={event.name}>{event.name}</a>);\r\n                    })}\r\n                </ul>\r\n            </div>}\r\n            {!!character.series.available && <div className=\"series\">\r\n                <ul className=\"collection with-header\">\r\n                    <li className=\"collection-header\"><h4>Series</h4></li>\r\n                    {character.series.items.map(series => {\r\n                        return (<a href=\"!#\" onClick={(e) => onGetData(series.resourceURI, 'series', e)} className=\"collection-item\" key={series.name}>{series.name}</a>);\r\n                    })}\r\n                </ul>\r\n            </div>}\r\n            {!!character.stories.available && <div className=\"stories\">\r\n                <ul className=\"collection with-header\">\r\n                    <li className=\"collection-header\"><h4>Stories</h4></li>\r\n                    {character.stories.items.map(story => {\r\n                        return (\r\n                            <div key={story.name + story.type} >\r\n                                <div className=\"collection-item\">\r\n                                    {story.name}\r\n                                    <span  className=\"secondary-content\">{story.type}</span>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            </div>}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nDetailedCard.propTypes = {\r\n    character: PropTypes.object.isRequired,\r\n    onGetData: PropTypes.func.isRequired\r\n};","import React, { Component } from 'react';\r\nimport CharactersList from '../../../components/Characters/List/List';\r\nimport { Navbar } from '../../../components/UI/Navbar/Navbar';\r\nimport SearchInputContainer from '../../../components/common/searchInputContainer/searchInputContainer';\r\n\r\nexport class ScreensCharactersList extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar text={'Characters'}/>\r\n                <SearchInputContainer type={'characters'}/>\r\n                <CharactersList />\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Popup.css';\r\n\r\nexport const Popup = ({info, onClosePopup}) => (\r\n    <div>\r\n        <div className=\"overlay\" onClick={onClosePopup}></div>\r\n        <div className=\"popup\">\r\n            <div className=\"card\">\r\n                <div className=\"card-image\">\r\n                    <img src={`${info.thumbnail.path}.${info.thumbnail.extension}`} alt={info.title}></img>\r\n                    <span className='card-title'>{info.title || info.fullName || info.name}</span>\r\n                </div>\r\n                <div className=\"card-content\">\r\n                    <p>{info.description}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nPopup.propTypes = {\r\n    info: PropTypes.object.isRequired,\r\n    onClosePopup: PropTypes.func.isRequired\r\n};","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { fetchSingleItem, fetchAdditionalData } from '../../../redux/actions/dataActions';\r\n\r\nimport { DetailedCard } from './Card/Card';\r\nimport { Popup } from '../../UI/Popup/Popup';\r\n\r\nclass Character extends Component {\r\n    state = {\r\n        popupOpen: false\r\n    }\r\n    componentDidMount() {\r\n        this.props.fetchSingleItem('characters', +this.props.url);\r\n    }\r\n    onGetData(url, type, e) {\r\n        e.preventDefault();\r\n        const myRegexp = new RegExp(`${type}/(.*)`);\r\n        const match = myRegexp.exec(url)[1];\r\n        this.props.fetchAdditionalData(type, match);\r\n\r\n        this.setState({\r\n            popupOpen: true\r\n        })\r\n    }\r\n    onClosePopup = () => {\r\n        this.setState({\r\n            popupOpen: false\r\n        })\r\n    }\r\n    render() {\r\n        const character = this.props.character;\r\n        const additional = this.props.additional;\r\n\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col s12\">{character ? <DetailedCard character={character} key={character.id} onGetData={(url, type, e) => this.onGetData(url, type, e)}/> : <span>Loading data</span>}</div>\r\n                <div>{additional && this.state.popupOpen && <Popup info={additional} onClosePopup={this.onClosePopup}/>}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCharacter.propTypes = {\r\n    fetchSingleItem: PropTypes.func.isRequired,\r\n    fetchAdditionalData: PropTypes.func.isRequired,\r\n    character: PropTypes.object,\r\n    url: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    character: state.data.item,\r\n    additional: state.data.additional\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchSingleItem, fetchAdditionalData })(Character);","import React from 'react';\r\n\r\nimport './Footer.css';\r\n\r\nexport const Footer = () => (\r\n    <footer className=\"footer\">\r\n        <span>Data provided by Marvel. © 2018 MARVEL</span>\r\n    </footer>\r\n);","import { FETCH_DATA_ACTION, FETCH_SINGLE_ITEM_ACTION, FETCH_SEARCHED_DATA_ACTION, FETCH_ADDITIONAL_INFO_ACTION } from '../actions/types';\r\n\r\nconst initialState = {\r\n    data: [],\r\n    item: null,\r\n    additional: null,\r\n    options: {}\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case FETCH_DATA_ACTION:\r\n            return {\r\n                ...state,\r\n                data: action.data,\r\n                options: action.options\r\n            }\r\n        case FETCH_SINGLE_ITEM_ACTION:\r\n            return {\r\n                ...state,\r\n                item: action.data\r\n            }\r\n        case FETCH_SEARCHED_DATA_ACTION:\r\n            return {\r\n                ...state,\r\n                data: state.data.filter((item) => item.id === action.data.id)\r\n            }\r\n        case FETCH_ADDITIONAL_INFO_ACTION:\r\n        return {\r\n            ...state,\r\n            additional: action.data\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport dataReducer from './dataReducer';\r\n\r\nexport default combineReducers({\r\n    data: dataReducer\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../reducers';\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer, initialState, applyMiddleware(...middleware));\r\n\r\nexport default store;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Button } from '../../UI/Button/Button';\r\n\r\nexport const ComicsCard = ({comic}) => (\r\n    <div className=\"col s12 m6 l3\">\r\n        <div className=\"card\">\r\n            <div className=\"card-image\">\r\n                <img src={`${comic.thumbnail.path}/landscape_incredible.${comic.thumbnail.extension}`} alt={comic.title}></img>\r\n                <span className='card-title'>{comic.title}</span>\r\n            </div>\r\n            <div className='card-action'>\r\n                <Button text={'Learn More'} link ={`comics/${comic.id}`}></Button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nComicsCard.propTypes = {\r\n    comic: PropTypes.object.isRequired\r\n};\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { fetchData } from '../../../redux/actions/dataActions';\r\n\r\nimport { ComicsCard } from '../Card/Card';\r\n\r\nimport Pagination from 'rc-pagination';\r\nimport 'rc-pagination/assets/index.css';\r\n\r\nclass ComicsList extends Component {\r\n    componentDidMount() {\r\n        this.fetchData();\r\n    }\r\n    fetchData(page) {\r\n        this.props.fetchData('comics', {page});\r\n        window.scrollTo(0, 0);\r\n    }\r\n    render() {\r\n        const {comics, options} = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"row\">{comics ? comics.map((comic) => {\r\n                    return <ComicsCard comic={comic} key={comic.id}/>;\r\n                }) : <span>Loading data</span>}</div>\r\n                {options.count && <Pagination current={options.page || 1} total={options.totalPages} pageSize={options.count} onChange={(page) => this.fetchData(page)}/>};\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nComicsList.propTypes = {\r\n    fetchData: PropTypes.func.isRequired,\r\n    comics: PropTypes.array.isRequired,\r\n    options: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    comics: state.data.data,\r\n    options: state.data.options\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchData })(ComicsList);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// import './Card.css';\r\n\r\nimport { Button } from '../../../UI/Button/Button';\r\n\r\nexport const DetailedCard = ({comic, onGetData}) => (\r\n    <div className=\"row\">\r\n        <div className=\"col s12 m6\">\r\n            <h4>{comic.name}</h4>\r\n            <div>\r\n                <img src={`${comic.thumbnail.path}.${comic.thumbnail.extension}`} alt={comic.name}></img>\r\n            </div>\r\n            <p>{comic.description}</p>\r\n            <span>Format: {comic.format}</span>\r\n            <br></br>\r\n            <span>Page count: {comic.pageCount}</span>\r\n            <br></br>\r\n            <span>Issue Number: {comic.issueNumber}</span>\r\n            {!!comic.urls && !!comic.urls.length\r\n            && <div className=\"comic__actions\">\r\n                {comic.urls.map(url => {\r\n                    return <Button text={url.type} link={url.url} key={url.url} external={true}></Button>;\r\n                })}\r\n            </div>}\r\n        </div>\r\n        <div className=\"col s12 m6\">\r\n            {!!comic.characters.available && <div className=\"characters\">\r\n                <ul className=\"collection with-header\">\r\n                    <li className=\"collection-header\"><h4>Characters</h4></li>\r\n                    {comic.characters.items.map(character => {\r\n                        return (<a href=\"!#\" onClick={(e) => onGetData(character.resourceURI, 'characters', e)} className=\"collection-item\" key={character.name}>{character.name}</a>);\r\n                    })}\r\n                </ul>\r\n            </div>}\r\n            {!!comic.events.available && <div className=\"events\">\r\n                <ul className=\"collection with-header\">\r\n                    <li className=\"collection-header\"><h4>Events</h4></li>\r\n                    {comic.events.items.map(event => {\r\n                        return (<a href=\"!#\" onClick={(e) => onGetData(event.resourceURI, 'events', e)} className=\"collection-item\" key={event.name}>{event.name}</a>);\r\n                    })}\r\n                </ul>\r\n            </div>}\r\n            {!!comic.series.available && <div className=\"series\">\r\n                <ul className=\"collection with-header\">\r\n                    <li className=\"collection-header\"><h4>Series</h4></li>\r\n                    <a href=\"!#\" onClick={(e) => onGetData(comic.series.resourceURI, 'series', e)} className=\"collection-item\" key={comic.series.name}>{comic.series.name}</a>\r\n                </ul>\r\n            </div>}\r\n            {!!comic.stories.available && <div className=\"stories\">\r\n                <ul className=\"collection with-header\">\r\n                    <li className=\"collection-header\"><h4>Stories</h4></li>\r\n                    {comic.stories.items.map((story, i) => {\r\n                        return (\r\n                            <div  key={story.name + story.type + i} >\r\n                                <div className=\"collection-item\">\r\n                                    {story.name}\r\n                                    <span  className=\"secondary-content\">{story.type}</span>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            </div>}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nDetailedCard.propTypes = {\r\n    comic: PropTypes.object.isRequired,\r\n    onGetData: PropTypes.func.isRequired\r\n};","import React, { Component } from 'react';\r\nimport ComicsList from '../../../components/Comics/List/List';\r\nimport { Navbar } from '../../../components/UI/Navbar/Navbar';\r\n\r\nexport class ScreensComicsList extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar text={'Comics'}/>\r\n                <ComicsList />\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { fetchSingleItem, fetchAdditionalData } from '../../../redux/actions/dataActions';\r\n\r\nimport { DetailedCard } from './Card/Card';\r\nimport { Popup } from '../../UI/Popup/Popup';\r\n\r\nclass Comic extends Component {\r\n    state = {\r\n        popupOpen: false\r\n    }\r\n    componentDidMount() {\r\n        this.props.fetchSingleItem('comics', +this.props.url);\r\n    }\r\n    onGetData(url, type, e) {\r\n        e.preventDefault();\r\n        const myRegexp = new RegExp(`${type}/(.*)`);\r\n        const match = myRegexp.exec(url)[1];\r\n        this.props.fetchAdditionalData(type, match);\r\n\r\n        this.setState({\r\n            popupOpen: true\r\n        })\r\n    }\r\n    onClosePopup = () => {\r\n        this.setState({\r\n            popupOpen: false\r\n        })\r\n    }\r\n    render() {\r\n        const comic = this.props.comic;\r\n        const additional = this.props.additional;\r\n\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col s12 \">{comic ? <DetailedCard comic={comic} key={comic.id} onGetData={(url, type, e) => this.onGetData(url, type, e)}/> : <span>Loading data</span>}</div>\r\n                <div>{additional && this.state.popupOpen && <Popup info={additional} onClosePopup={this.onClosePopup}/>}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nComic.propTypes = {\r\n    fetchSingleItem: PropTypes.func.isRequired,\r\n    fetchAdditionalData: PropTypes.func.isRequired,\r\n    comic: PropTypes.object.isRequired,\r\n    url: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    comic: state.data.item,\r\n    additional: state.data.additional\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchSingleItem, fetchAdditionalData })(Comic);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Button } from '../../UI/Button/Button';\r\n\r\n// import styles from './Card.module.css';\r\n\r\nexport const CreatorsCard = ({creator}) => (\r\n    <div className=\"col s12 m6 l3\">\r\n    <div className=\"card\">\r\n        <div className=\"card-image\">\r\n            <img src={`${creator.thumbnail.path}/landscape_incredible.${creator.thumbnail.extension}`} alt={creator.fullName}></img>\r\n            <span className='card-title truncate'>{creator.fullName}</span>\r\n            </div>\r\n            <div className='card-action'>\r\n                <Button text={'Learn More'} link ={`creators/${creator.id}`}></Button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nCreatorsCard.propTypes = {\r\n    creator: PropTypes.object.isRequired\r\n};\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { fetchData } from '../../../redux/actions/dataActions';\r\n\r\nimport { CreatorsCard }  from '../Card/Card';\r\n\r\nimport Pagination from 'rc-pagination';\r\nimport 'rc-pagination/assets/index.css';\r\n\r\nclass CreatorsList extends Component {\r\n    componentDidMount() {\r\n        this.fetchData();\r\n    }\r\n    fetchData(page) {\r\n        this.props.fetchData('creators', {page});\r\n        window.scrollTo(0, 0);\r\n    }\r\n    render() {\r\n        const {creators, options} = this.props;\r\n\r\n        return (\r\n            <div>\r\n            <div className=\"row\">{creators ? creators.map((creator) => {\r\n                return <CreatorsCard creator={creator} key={creator.id}/>;\r\n            }) : <span>Loading data</span>}</div>\r\n                {options.count && <Pagination current={options.page || 1} total={options.totalPages} pageSize={options.count} onChange={(page) => this.fetchData(page)}/>};\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCreatorsList.propTypes = {\r\n    fetchData: PropTypes.func.isRequired,\r\n    creators: PropTypes.array.isRequired,\r\n    options: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    creators: state.data.data,\r\n    options: state.data.options\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchData })(CreatorsList);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// import './Card.css';\r\n\r\nimport { Button } from '../../../UI/Button/Button';\r\n\r\nexport const DetailedCard = ({creator, onGetData}) => (\r\n    <div className=\"row\">\r\n        <div className=\"col s12 m6\">\r\n            <h4>{creator.fullName}</h4>\r\n            <div>\r\n                <img src={`${creator.thumbnail.path}.${creator.thumbnail.extension}`} alt={creator.fullName}></img>\r\n            </div>\r\n            {!!creator.urls && !!creator.urls.length\r\n            && <div className=\"creator__actions\">\r\n                {creator.urls.map(url => {\r\n                    return <Button text={url.type} link={url.url} key={url.url} external={true}></Button>;\r\n                })}\r\n            </div>}\r\n        </div>\r\n        <div className=\"col s12 m6\">\r\n            {!!creator.comics.available && <div className=\"comics\">\r\n                <ul className=\"collection with-header\">\r\n                    <li className=\"collection-header\"><h4>Comics</h4></li>\r\n                    {creator.comics.items.map(comic => {\r\n                        return (<a href=\"!#\" onClick={(e) => onGetData(comic.resourceURI, 'comics', e)} className=\"collection-item\" key={comic.name}>{comic.name}</a>);\r\n                    })}\r\n                </ul>\r\n            </div>}\r\n            {!!creator.events.available && <div className=\"events\">\r\n                <ul className=\"collection with-header\">\r\n                    <li className=\"collection-header\"><h4>Events</h4></li>\r\n                    {creator.events.items.map(event => {\r\n                        return (<a href=\"!#\" onClick={(e) => onGetData(event.resourceURI, 'events', e)}  className=\"collection-item\" key={event.name}>{event.name}</a>);\r\n                    })}\r\n                </ul>\r\n            </div>}\r\n            {!!creator.series.available && <div className=\"series\">\r\n                <ul className=\"collection with-header\">\r\n                    <li className=\"collection-header\"><h4>Series</h4></li>\r\n                    {creator.series.items.map(series => {\r\n                        return (<a href=\"!#\" onClick={(e) => onGetData(series.resourceURI, 'series', e)} className=\"collection-item\" key={series.name}>{series.name}</a>);\r\n                    })}\r\n                </ul>\r\n            </div>}\r\n            {!!creator.stories.available && <div className=\"stories\">\r\n                <ul className=\"collection with-header\">\r\n                    <li className=\"collection-header\"><h4>Stories</h4></li>\r\n                    {creator.stories.items.map(story => {\r\n                        return (\r\n                            <div  key={story.name} >\r\n                                <div className=\"collection-item\">\r\n                                    {story.name}\r\n                                    <span  className=\"secondary-content\">{story.type}</span>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            </div>}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nDetailedCard.propTypes = {\r\n    creator: PropTypes.object.isRequired,\r\n    onGetData: PropTypes.func.isRequired\r\n};","import React, { Component } from 'react';\r\nimport CreatorsList from '../../../components/Creators/List/List';\r\nimport { Navbar } from '../../../components/UI/Navbar/Navbar';\r\n\r\nexport class ScreensCreatorsList extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar text={'Creators'}/>\r\n                <CreatorsList />\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { fetchSingleItem, fetchAdditionalData } from '../../../redux/actions/dataActions';\r\n\r\nimport { DetailedCard } from './Card/Card';\r\nimport { Popup } from '../../UI/Popup/Popup';\r\n\r\nclass Creator extends Component {\r\n    componentDidMount() {\r\n        this.props.fetchSingleItem('creators', +this.props.url);\r\n    }\r\n    onGetData(url, type, e) {\r\n        e.preventDefault();\r\n        const myRegexp = new RegExp(`${type}/(.*)`);\r\n        const match = myRegexp.exec(url)[1];\r\n        this.props.fetchAdditionalData(type, match);\r\n\r\n        this.setState({\r\n            popupOpen: true\r\n        })\r\n    }\r\n    onClosePopup = () => {\r\n        this.setState({\r\n            popupOpen: false\r\n        })\r\n    }\r\n    render() {\r\n        const creator = this.props.creator;\r\n        const additional = this.props.additional;\r\n\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col s12 \">{creator ? <DetailedCard creator={creator} key={creator.id} onGetData={(url, type, e) => this.onGetData(url, type, e)}/> : <span>Loading data</span>}</div>\r\n                <div>{additional && this.state.popupOpen && <Popup info={additional} onClosePopup={this.onClosePopup}/>}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCreator.propTypes = {\r\n    fetchSingleItem: PropTypes.func.isRequired,\r\n    fetchAdditionalData: PropTypes.func.isRequired,\r\n    creator: PropTypes.object.isRequired,\r\n    url: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    creator: state.data.item,\r\n    additional: state.data.additional\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchSingleItem, fetchAdditionalData })(Creator);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Button } from '../../UI/Button/Button';\r\n\r\n// import styles from './Card.module.css';\r\n\r\n\r\nexport const EventsCard = ({event}) => (\r\n    <div className=\"col s12 m6 l3\">\r\n    <div className=\"card\">\r\n        <div className=\"card-image\">\r\n            <img src={`${event.thumbnail.path}/landscape_incredible.${event.thumbnail.extension}`} alt={event.title}></img>\r\n            <span className='card-title truncate'>{event.title}</span>\r\n            </div>\r\n            <div className='card-action'>\r\n                <Button text={'Learn More'} link ={`events/${event.id}`}></Button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nEventsCard.propTypes = {\r\n    event: PropTypes.object.isRequired\r\n};\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { fetchData } from '../../../redux/actions/dataActions';\r\n\r\nimport { EventsCard }  from '../Card/Card';\r\n\r\nimport Pagination from 'rc-pagination';\r\nimport 'rc-pagination/assets/index.css';\r\n\r\nclass EventsList extends Component {\r\n    componentDidMount() {\r\n        this.fetchData();\r\n    }\r\n    fetchData(page) {\r\n        this.props.fetchData('events', {page});\r\n        window.scrollTo(0, 0);\r\n    }\r\n    render() {\r\n        const {events, options} = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"row\">{events ? events.map((event) => {\r\n                    return <EventsCard event={event} key={event.id}/>;\r\n                }) : <span>Loading data</span>}</div>\r\n                {options.count && <Pagination current={options.page || 1} total={options.totalPages} pageSize={options.count} onChange={(page) => this.fetchData(page)}/>};\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nEventsList.propTypes = {\r\n    fetchData: PropTypes.func.isRequired,\r\n    events: PropTypes.array.isRequired,\r\n    options: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    events: state.data.data,\r\n    options: state.data.options\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchData })(EventsList);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// import './Card.css';\r\n\r\nimport { Button } from '../../../UI/Button/Button';\r\n\r\n\r\nexport const DetailedCard = ({event, onGetData}) => (\r\n    <div className=\"row\">\r\n        <div className=\"col s12 m6\">\r\n            <h4>{event.title}</h4>\r\n            <div>\r\n                <img src={`${event.thumbnail.path}.${event.thumbnail.extension}`} alt={event.title}></img>\r\n            </div>\r\n            {!!event.urls && !!event.urls.length\r\n            && <div className=\"event__actions\">\r\n                {event.urls.map(url => {\r\n                    return <Button text={url.type} link={url.url} key={url.url} external={true}></Button>;\r\n                })}\r\n            </div>}\r\n        </div>\r\n        <div className=\"col s12 m6\">\r\n            {!!event.comics.available && <div className=\"comics\">\r\n                <ul className=\"collection with-header\">\r\n                    <li className=\"collection-header\"><h4>Comics</h4></li>\r\n                    {event.comics.items.map(comic => {\r\n                        return (<a href=\"!#\" onClick={(e) => onGetData(comic.resourceURI, 'comics', e)} className=\"collection-item\" key={comic.name}>{comic.name}</a>);\r\n                    })}\r\n                </ul>\r\n            </div>}\r\n            {!!event.creators.available && <div className=\"creators\">\r\n                <ul className=\"collection with-header\">\r\n                    <li className=\"collection-header\"><h4>Creators</h4></li>\r\n                    {event.creators.items.map(creator => {\r\n                        return (<a href=\"!#\" onClick={(e) => onGetData(creator.resourceURI, 'creators', e)} className=\"collection-item\" key={creator.name}>{creator.name} ({creator.role})</a>);\r\n                    })}\r\n                </ul>\r\n            </div>}\r\n            {!!event.series.available && <div className=\"series\">\r\n                <ul className=\"collection with-header\">\r\n                    <li className=\"collection-header\"><h4>Series</h4></li>\r\n                    {event.series.items.map(series => {\r\n                        return (<a href=\"!#\" onClick={(e) => onGetData(series.resourceURI, 'series', e)} className=\"collection-item\" key={series.name}>{series.name}</a>);\r\n                    })}\r\n                </ul>\r\n            </div>}\r\n            {!!event.stories.available && <div className=\"stories\">\r\n                <ul className=\"collection with-header\">\r\n                    <li className=\"collection-header\"><h4>Stories</h4></li>\r\n                    {event.stories.items.map(story => {\r\n                        return (\r\n                            <div key={story.name + story.type} >\r\n                                <div className=\"collection-item\">\r\n                                    {story.name}\r\n                                    <span  className=\"secondary-content\">{story.type}</span>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            </div>}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nDetailedCard.propTypes = {\r\n    event: PropTypes.object.isRequired,\r\n    onGetData: PropTypes.func.isRequired\r\n};","import React, { Component } from 'react';\r\nimport EventsList from '../../../components/Events/List/List';\r\nimport { Navbar } from '../../../components/UI/Navbar/Navbar';\r\n\r\nexport class ScreensEventsList extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar text={'Events'}/>\r\n                <EventsList />\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { fetchSingleItem, fetchAdditionalData } from '../../../redux/actions/dataActions';\r\n\r\nimport { DetailedCard } from './Card/Card';\r\nimport { Popup } from '../../UI/Popup/Popup';\r\n\r\nclass Event extends Component {\r\n    componentDidMount() {\r\n        this.props.fetchSingleItem('events', +this.props.url);\r\n    }\r\n    onGetData(url, type, e) {\r\n        e.preventDefault();\r\n        const myRegexp = new RegExp(`${type}/(.*)`);\r\n        const match = myRegexp.exec(url)[1];\r\n        this.props.fetchAdditionalData(type, match);\r\n\r\n        this.setState({\r\n            popupOpen: true\r\n        })\r\n    }\r\n    onClosePopup = () => {\r\n        this.setState({\r\n            popupOpen: false\r\n        })\r\n    }\r\n    render() {\r\n        const event = this.props.event;\r\n        const additional = this.props.additional;\r\n\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col s12 \">{event ? <DetailedCard event={event} key={event.id} onGetData={(url, type, e) => this.onGetData(url, type, e)}/> : <span>Loading data</span>}</div>\r\n                <div>{additional && this.state.popupOpen && <Popup info={additional} onClosePopup={this.onClosePopup}/>}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nEvent.propTypes = {\r\n    fetchSingleItem: PropTypes.func.isRequired,\r\n    fetchAdditionalData: PropTypes.func.isRequired,\r\n    event: PropTypes.object.isRequired,\r\n    url: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    event: state.data.item,\r\n    additional: state.data.additional\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchSingleItem, fetchAdditionalData })(Event);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Button } from '../../UI/Button/Button';\r\n\r\n// import styles from './Card.module.css';\r\n\r\n\r\nexport const StoriesCard = ({story}) => (\r\n    <div className=\"col s12 m6 l3\">\r\n    <div className=\"card\">\r\n        <div className=\"card-content\">\r\n            <p>{story.title}</p>\r\n        </div>\r\n        <div className=\"card-action\">\r\n            <Button text={'Learn More'} link ={`stories/${story.id}`}></Button>\r\n        </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nStoriesCard.propTypes = {\r\n    story: PropTypes.object.isRequired\r\n};\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { fetchData } from '../../../redux/actions/dataActions';\r\n\r\nimport { StoriesCard }  from '../Card/Card';\r\n\r\nimport Pagination from 'rc-pagination';\r\nimport 'rc-pagination/assets/index.css';\r\n\r\nclass StoriesList extends Component {\r\n    componentDidMount() {\r\n        this.fetchData();\r\n    }\r\n    fetchData(page) {\r\n        this.props.fetchData('stories', {page});\r\n        window.scrollTo(0, 0);\r\n    }\r\n    render() {\r\n        const {stories, options} = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"row\">{stories ? stories.map((story) => {\r\n                    return <StoriesCard story={story} key={story.id}/>;\r\n                }) : <span>Loading data</span>}</div>\r\n                {options.count && <Pagination style={{ margin: '100px' }} current={options.page || 1} total={options.totalPages} pageSize={options.count} onChange={(page) => this.fetchData(page)}/>};\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nStoriesList.propTypes = {\r\n    fetchData: PropTypes.func.isRequired,\r\n    stories: PropTypes.array.isRequired,\r\n    options: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    stories: state.data.data,\r\n    options: state.data.options\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchData })(StoriesList);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// import './Card.css';\r\n\r\nexport const DetailedCard = ({story, onGetData}) => (\r\n    <div className=\"row\">\r\n        <div className=\"col s12 m6\">\r\n            <h4>{story.title} {story.type}</h4>\r\n            <div>\r\n                Original issue <a href={story.originalIssue.resourceURI}>{story.originalIssue.name}</a>\r\n            </div>\r\n        </div>\r\n        <div className=\"col s12 m6\">\r\n            {!!story.comics.available && <div className=\"comics\">\r\n                <ul className=\"collection with-header\">\r\n                    <li className=\"collection-header\"><h4>Comics</h4></li>\r\n                    {story.comics.items.map(comic => {\r\n                        return (<a href=\"!#\" onClick={(e) => onGetData(comic.resourceURI, 'comics', e)} className=\"collection-item\" key={comic.name}>{comic.name}</a>);\r\n                    })}\r\n                </ul>\r\n            </div>}\r\n            {!!story.creators.available && <div className=\"creators\">\r\n                <ul className=\"collection with-header\">\r\n                    <li className=\"collection-header\"><h4>Creators</h4></li>\r\n                    {story.creators.items.map(creator => {\r\n                        return (<a href=\"!#\" onClick={(e) => onGetData(creator.resourceURI, 'creators', e)} className=\"collection-item\" key={creator.name}>{creator.name} ({creator.role})</a>);\r\n                    })}\r\n                </ul>\r\n            </div>}\r\n            {!!story.series.available && <div className=\"series\">\r\n                <ul className=\"collection with-header\">\r\n                    <li className=\"collection-header\"><h4>Series</h4></li>\r\n                    {story.series.items.map(series => {\r\n                        return (<a href=\"!#\" onClick={(e) => onGetData(series.resourceURI, 'series', e)} className=\"collection-item\" key={series.name}>{series.name}</a>);\r\n                    })}\r\n                </ul>\r\n            </div>}\r\n            {!!story.characters.available && <div className=\"characters\">\r\n                <ul className=\"collection with-header\">\r\n                    <li className=\"collection-header\"><h4>Characters</h4></li>\r\n                    {story.characters.items.map(character => {\r\n                        return (<a href=\"!#\" onClick={(e) => onGetData(character.resourceURI, 'characters', e)} className=\"collection-item\" key={character.name}>{character.name}</a>);\r\n                    })}\r\n                </ul>\r\n            </div>}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nDetailedCard.propTypes = {\r\n    story: PropTypes.object.isRequired,\r\n    onGetData: PropTypes.func.isRequired\r\n};","import React, { Component } from 'react';\r\nimport StoriesList from '../../../components/Stories/List/List';\r\nimport { Navbar } from '../../../components/UI/Navbar/Navbar';\r\n\r\nexport class ScreensStoriesList extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar text={'Stories'}/>\r\n                <StoriesList />\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { fetchSingleItem, fetchAdditionalData } from '../../../redux/actions/dataActions';\r\n\r\nimport { DetailedCard } from './Card/Card';\r\nimport { Popup } from '../../UI/Popup/Popup';\r\n\r\nclass Story extends Component {\r\n    componentDidMount() {\r\n        this.props.fetchSingleItem('stories', +this.props.url);\r\n    }\r\n    onGetData(url, type, e) {\r\n        e.preventDefault();\r\n        const myRegexp = new RegExp(`${type}/(.*)`);\r\n        const match = myRegexp.exec(url)[1];\r\n        this.props.fetchAdditionalData(type, match);\r\n\r\n        this.setState({\r\n            popupOpen: true\r\n        })\r\n    }\r\n    onClosePopup = () => {\r\n        this.setState({\r\n            popupOpen: false\r\n        })\r\n    }\r\n    render() {\r\n        const story = this.props.story;\r\n        const additional = this.props.additional;\r\n\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col s12 \">{story ? <DetailedCard story={story} key={story.id} onGetData={(url, type, e) => this.onGetData(url, type, e)}/> : <span>Loading data</span>}</div>\r\n                <div>{additional && this.state.popupOpen && <Popup info={additional} onClosePopup={this.onClosePopup}/>}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nStory.propTypes = {\r\n    fetchSingleItem: PropTypes.func.isRequired,\r\n    fetchAdditionalData: PropTypes.func.isRequired,\r\n    story: PropTypes.object.isRequired,\r\n    url: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    story: state.data.item,\r\n    additional: state.data.additional\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchSingleItem, fetchAdditionalData })(Story);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Button } from '../../UI/Button/Button';\r\n\r\n// import styles from './Card.module.css';\r\n\r\nexport const SeriesCard = ({series}) => (\r\n    <div className=\"col s12 m6 l3\">\r\n      <div className=\"card\">\r\n          <div className=\"card-image\">\r\n            <img src={`${series.thumbnail.path}/landscape_incredible.${series.thumbnail.extension}`} alt={series.title}></img>\r\n            <span className=\"card-title\">{series.title}</span>\r\n          </div>\r\n          <div className=\"card-action\">\r\n            <Button text={'Learn More'} link ={`series/${series.id}`}></Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n);\r\n\r\nSeriesCard.propTypes = {\r\n    series: PropTypes.object.isRequired\r\n};\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { fetchData } from '../../../redux/actions/dataActions';\r\n\r\nimport { SeriesCard }  from '../Card/Card';\r\n\r\nimport Pagination from 'rc-pagination';\r\nimport 'rc-pagination/assets/index.css';\r\n\r\nclass SeriesList extends Component {\r\n    componentDidMount() {\r\n        this.fetchData();\r\n    }\r\n    fetchData(page) {\r\n        this.props.fetchData('series', {page});\r\n        window.scrollTo(0, 0);\r\n    }\r\n    render() {\r\n        const {series, options} = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"row\">{series ? series.map((series) => {\r\n                    return <SeriesCard series={series} key={series.id}/>;\r\n                }) : <span>Loading data</span>}</div>\r\n                {options.count && <Pagination current={options.page || 1} total={options.totalPages} pageSize={options.count} onChange={(page) => this.fetchData(page)}/>};\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSeriesList.propTypes = {\r\n    fetchData: PropTypes.func.isRequired,\r\n    series: PropTypes.array.isRequired,\r\n    options: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    series: state.data.data,\r\n    options: state.data.options\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchData })(SeriesList);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Card.css';\r\n\r\nimport { Button } from '../../../UI/Button/Button';\r\n\r\nexport const DetailedCard = ({series, onGetData}) => (\r\n    <div className=\"row\">\r\n        <div className=\"col s12 m6\">\r\n            <h4>{series.title}</h4>\r\n            <div className=\"series__image\">\r\n                <img src={`${series.thumbnail.path}.${series.thumbnail.extension}`} alt={series.title}></img>\r\n            </div>\r\n            {!!series.urls && !!series.urls.length && <div className=\"card-action\">\r\n                <div className=\"series__actions\">\r\n                    {series.urls.map(url => {\r\n                        return <Button text={url.type} link={url.url} key={url.url}></Button>;\r\n                    })}\r\n                </div>\r\n            </div>}\r\n        </div>\r\n        <div className=\"col s12 m6\">\r\n            {!!series.comics.available && <div className=\"comics\">\r\n                <ul className=\"collection with-header\">\r\n                    <li className=\"collection-header\"><h4>Comics</h4></li>\r\n                    {series.comics.items.map(comic => {\r\n                        return (<a href=\"!#\" onClick={(e) => onGetData(comic.resourceURI, 'comics', e)} className=\"collection-item\" key={comic.name}>{comic.name}</a>);\r\n                    })}\r\n                </ul>\r\n            </div>}\r\n            {!!series.creators.available &&  <div className=\"creators\">\r\n                <ul className=\"collection with-header\">\r\n                    <li className=\"collection-header\"><h4>Creators</h4></li>\r\n                    {series.creators.items.map(creator => {\r\n                        return (<a href=\"!#\" onClick={(e) => onGetData(creator.resourceURI, 'creators', e)} className=\"collection-item\" key={creator.name}>{creator.name} ({creator.role})</a>);\r\n                    })}\r\n                </ul>\r\n            </div>}\r\n            {!!series.characters.available && <div className=\"characters\">\r\n                <ul className=\"collection with-header\">\r\n                    <li className=\"collection-header\"><h4>Characters</h4></li>\r\n                    {series.characters.items.map(character => {\r\n                        return (<a href=\"!#\" onClick={(e) => onGetData(character.resourceURI, 'characters', e)} className=\"collection-item\" key={character.name}>{character.name}</a>);\r\n                    })}\r\n                </ul>\r\n            </div>}\r\n            {!!series.stories.available && <div className=\"stories\">\r\n                <ul className=\"collection with-header\">\r\n                    <li className=\"collection-header\"><h4>Stories</h4></li>\r\n                    {series.stories.items.map(story => {\r\n                        return (\r\n                            <div  key={story.name + story.type} >\r\n                                <div className=\"collection-item\">\r\n                                    {story.name}\r\n                                    <span  className=\"secondary-content\">{story.type}</span>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            </div>}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nDetailedCard.propTypes = {\r\n    series: PropTypes.object.isRequired,\r\n    onGetData: PropTypes.func.isRequired\r\n};","import React, { Component } from 'react';\r\nimport SeriesList from '../../../components/Series/List/List';\r\nimport { Navbar } from '../../../components/UI/Navbar/Navbar';\r\n\r\nexport class ScreensSeriesList extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar text={'Series'}/>\r\n                <SeriesList />\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { fetchSingleItem, fetchAdditionalData } from '../../../redux/actions/dataActions';\r\n\r\nimport { DetailedCard } from './Card/Card';\r\nimport { Popup } from '../../UI/Popup/Popup';\r\n\r\nclass Series extends Component {\r\n    componentDidMount() {\r\n        this.props.fetchSingleItem('series', +this.props.url);\r\n    }\r\n    onGetData(url, type, e) {\r\n        e.preventDefault();\r\n        const myRegexp = new RegExp(`${type}/(.*)`);\r\n        const match = myRegexp.exec(url)[1];\r\n        this.props.fetchAdditionalData(type, match);\r\n\r\n        this.setState({\r\n            popupOpen: true\r\n        })\r\n    }\r\n    onClosePopup = () => {\r\n        this.setState({\r\n            popupOpen: false\r\n        })\r\n    }\r\n    render() {\r\n        const series = this.props.series;\r\n        const additional = this.props.additional;\r\n\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col s12\">{series ? <DetailedCard series={series} key={series.id} onGetData={(url, type, e) => this.onGetData(url, type, e)}/> : <span>Loading data</span>}</div>\r\n                <div>{additional && this.state.popupOpen && <Popup info={additional} onClosePopup={this.onClosePopup}/>}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSeries.propTypes = {\r\n    fetchSingleItem: PropTypes.func.isRequired,\r\n    fetchAdditionalData: PropTypes.func.isRequired,\r\n    series: PropTypes.object.isRequired,\r\n    url: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    series: state.data.item,\r\n    additional: state.data.additional\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, { fetchSingleItem, fetchAdditionalData })(Series);","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { ScreensMain } from './Main/Main';\r\nimport { ScreensCharactersList } from './Characters/List/List';\r\nimport { ScreensCharacter } from './Characters/Character/Character';\r\nimport { Footer } from '../components/UI/Footer/Footer';\r\n\r\nimport store from '../redux/store/store';\r\nimport { ScreensComicsList } from './Comics/List/List';\r\nimport { ScreensComic } from './Comics/Comic/Comic';\r\nimport { ScreensCreatorsList } from './Creators/List/List';\r\nimport { ScreensCreator } from './Creators/Creator/Creator';\r\nimport { ScreensEventsList } from './Events/List/List';\r\nimport { ScreensEvent } from './Events/Event/Event';\r\nimport { ScreensStoriesList } from './Stories/List/List';\r\nimport { ScreensStory } from './Stories/Story/Story';\r\nimport { ScreensSeriesList } from './Series/List/List';\r\nimport { ScreensSeries } from './Series/Series/Series';\r\n\r\n\r\nexport const ScreensRoot = () => (\r\n    <Provider store={store}>\r\n        <div>\r\n            {/* <Route path=\"/\" exact component={ScreensMain} />\r\n            <Route path=\"/characters\" exact component={ScreensCharactersList} />\r\n            <Route path=\"/characters/:id\" exact component={ScreensCharacter} />\r\n            <Route path=\"/comics\" exact component={ScreensComicsList} />\r\n            <Route path=\"/comics/:id\" exact component={ScreensComic} />\r\n            <Route path=\"/creators\" exact component={ScreensCreatorsList} />\r\n            <Route path=\"/creators/:id\" exact component={ScreensCreator} />\r\n            <Route path=\"/events\" exact component={ScreensEventsList} />\r\n            <Route path=\"/events/:id\" exact component={ScreensEvent} />\r\n            <Route path=\"/series\" exact component={ScreensSeriesList} />\r\n            <Route path=\"/series/:id\" exact component={ScreensSeries} />\r\n            <Route path=\"/stories\" exact component={ScreensStoriesList} />\r\n            <Route path=\"/stories/:id\" exact component={ScreensStory} /> */}\r\n            fddfdff\r\n            <Footer></Footer>\r\n        </div>\r\n    </Provider>\r\n);","import React, { Component } from 'react';\r\nimport { ScreensRoot } from './screens/Root';\r\n\r\nexport const API_KEY = process.env.REACT_APP_MARVEL_API_KEY;\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <ScreensRoot />\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './styles/global.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\n\r\nReactDOM.render(\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <App />\r\n    </BrowserRouter>, document.getElementById('root'));\r\nregisterServiceWorker();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app__nav\":\"Navbar_app__nav__3-zVV\"};"],"sourceRoot":""}