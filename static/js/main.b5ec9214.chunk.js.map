{"version":3,"sources":["components/Menu/Menu.jsx","components/UI/Navbar/Navbar.jsx","screens/Main/Main.jsx","config/config.js","redux/actions/dataActions.js","redux/actions/types.js","components/UI/Button/Button.jsx","components/Characters/Card/Card.jsx","components/UI/Loader/Loader.jsx","components/Characters/List/List.jsx","components/UI/SearchInput/SearchInput.jsx","components/common/searchInputContainer/searchInputContainer.jsx","screens/Characters/List/List.jsx","components/Characters/Detailed/Card/Card.jsx","components/UI/Popup/Popup.jsx","components/Characters/Detailed/Character.jsx","screens/Characters/Character/Character.jsx","components/UI/Footer/Footer.jsx","redux/reducers/dataReducer.js","redux/reducers/index.js","redux/store/store.js","components/Comics/Card/Card.jsx","components/Comics/List/List.jsx","screens/Comics/List/List.jsx","components/Comics/Detailed/Card/Card.jsx","components/Comics/Detailed/Comic.jsx","screens/Comics/Comic/Comic.jsx","components/Creators/Card/Card.jsx","components/Creators/List/List.jsx","screens/Creators/List/List.jsx","components/Creators/Detailed/Card/Card.jsx","components/Creators/Detailed/Creator.jsx","screens/Creators/Creator/Creator.jsx","components/Events/Card/Card.jsx","components/Events/List/List.jsx","screens/Events/List/List.jsx","components/Events/Detailed/Card/Card.jsx","components/Events/Detailed/Event.jsx","screens/Events/Event/Event.jsx","components/Stories/Card/Card.jsx","components/Stories/List/List.jsx","screens/Stories/List/List.jsx","components/Stories/Detailed/Card/Card.jsx","components/Stories/Detailed/Story.jsx","screens/Stories/Story/Story.jsx","components/Series/Card/Card.jsx","components/Series/List/List.jsx","screens/Series/List/List.jsx","components/Series/Detailed/Card/Card.jsx","components/Series/Detailed/Series.jsx","screens/Series/Series/Series.jsx","screens/Root.jsx","App.js","registerServiceWorker.js","index.js","components/UI/Navbar/Navbar.module.css"],"names":["Menu","react_default","a","createElement","className","Link","to","Navbar","props","styles","text","ScreensMain","Navbar_Navbar","Menu_Menu_Menu","crypto","require","ts","Date","getTime","hash","MD5","toString","fetchData","name","origOptions","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","defaultOptions","options","currentOffset","response","data","results","totalPages","wrap","_context","prev","next","page","count","assign","undefined","fetch","concat","API_KEY","sent","json","total","type","stop","this","_x","apply","arguments","fetchSingleItem","id","_ref2","_callee2","_context2","_x2","Button","external","href","link","target","rel","CharactersCard","character","src","thumbnail","path","extension","alt","Button_Button","Loader","CharactersList","window","scrollTo","_this","_this$props","characters","map","Card_CharactersCard","key","Loader_Loader_Loader","rc_pagination_es","current","pageSize","onChange","Component","connect","state","SearchInput","value","onChangeValue","onSubmit","e","searchInputContainer","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","inputValue","setState","preventDefault","fetchSearchedData","_this2","SearchInput_SearchInput","searched","_ref3","_callee3","_context3","_x3","ScreensCharactersList","_Component","inherits","createClass","common_searchInputContainer_searchInputContainer","List","DetailedCard","onGetData","comics","available","items","comic","onClick","resourceURI","urls","length","url","events","event","series","stories","story","Popup","info","onClosePopup","title","description","Character","popupOpen","match","RegExp","exec","fetchAdditionalData","additional","Card_DetailedCard","Popup_Popup_Popup","item","_ref4","_callee4","_context4","_x4","ScreensCharacter","Detailed_Character","params","Footer","initialState","combineReducers","action","objectSpread","filter","middleware","thunk","store","createStore","rootReducer","applyMiddleware","ComicsCard","ComicsList","Card_ComicsCard","ScreensComicsList","List_List","format","pageCount","issueNumber","Comic","Card_Card_DetailedCard","ScreensComic","Detailed_Comic","CreatorsCard","creator","fullName","CreatorsList","creators","Card_CreatorsCard","ScreensCreatorsList","Creators_List_List","Creator","Detailed_Card_Card_DetailedCard","ScreensCreator","Detailed_Creator","EventsCard","EventsList","Card_EventsCard","ScreensEventsList","Events_List_List","role","Event","Events_Detailed_Card_Card_DetailedCard","ScreensEvent","Detailed_Event","StoriesCard","StoriesList","Card_StoriesCard","style","margin","ScreensStoriesList","Stories_List_List","originalIssue","Story","Stories_Detailed_Card_Card_DetailedCard","ScreensStory","Detailed_Story","SeriesCard","SeriesList","Card_SeriesCard","ScreensSeriesList","Series_List_List","Series","Series_Detailed_Card_Card_DetailedCard","ScreensSeries","Detailed_Series","ScreensRoot","es","Route","exact","component","Footer_Footer_Footer","process","App","Root_ScreensRoot","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","BrowserRouter","src_App","document","getElementById","URL","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports","app__nav"],"mappings":"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","file":"static/js/main.b5ec9214.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport './Menu.css';\n\nexport const Menu = () => (\n    <nav className=\"menu white\">\n        <ul className=\"menu__list\">\n            <li className=\"menu__item\">\n                <Link to=\"/characters\" className=\"menu__link\">Characters</Link>\n            </li>\n            <li className=\"menu__item\">\n                <Link to=\"/comics\" className=\"menu__link\">Comics</Link>\n            </li>\n            <li className=\"menu__item\">\n                <Link to=\"/creators\" className=\"menu__link\">Creators</Link>\n            </li>\n            <li className=\"menu__item\">\n                <Link to=\"/events\" className=\"menu__link\">Events</Link>\n            </li>\n            <li className=\"menu__item\">\n                <Link to=\"/series\" className=\"menu__link\">Series</Link>\n            </li>\n            <li className=\"menu__item\">\n                <Link to=\"/stories\" className=\"menu__link\">Stories</Link>\n            </li>\n        </ul>\n    </nav>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Link } from 'react-router-dom';\n\nimport styles from './Navbar.module.css';\n\nexport const Navbar = (props) => (\n    <nav className={styles['app__nav']}>\n        <Link to=\"/\">Home</Link>\n        <h1>{props.text}</h1>\n    </nav>\n);\n\nNavbar.propTypes = {\n    text: PropTypes.string.isRequired\n};","import React from 'react';\n\nimport { Menu } from '../../components/Menu/Menu';\nimport { Navbar } from '../../components/UI/Navbar/Navbar';\nimport './Main.css';\n\nexport const ScreensMain = () => (\n    <section className=\"main\">\n        <Navbar text={'Marvel'}/>\n        <Menu />\n    </section>\n);\n","const crypto = require('crypto-js');\n\nconst REACT_APP_MARVEL_API_PUBLIC_KEY=`cc69f3ca3348ebf33c9c570217237713`;\nconst REACT_APP_MARVEL_API_PRIVATE_KEY=`1abaad9e0d86c7a4c014a81caaf3e39ee3213bbb`;\n\nexport let ts = new Date().getTime();\nexport let hash = crypto.MD5(ts + REACT_APP_MARVEL_API_PRIVATE_KEY + REACT_APP_MARVEL_API_PUBLIC_KEY).toString();\n","import { FETCH_DATA_ACTION, FETCH_SINGLE_ITEM_ACTION, FETCH_SEARCHED_DATA_ACTION, FETCH_ADDITIONAL_INFO_ACTION } from './types';\n\nimport { API_KEY } from '../../App'\n\nimport { hash, ts } from '../../config/config';\n\nexport const fetchData = (name, origOptions) => async dispatch => {\n    const defaultOptions = { page: 0, count: 20 }\n    const options = Object.assign(defaultOptions, origOptions)\n\n    const currentOffset = options.page === undefined ? 0 : (options.count * (options.page - 1));\n\n    const response = await fetch(`https://gateway.marvel.com/v1/public/${name}?apikey=${API_KEY}&ts=${ts}&hash=${hash}&offset=${currentOffset}`);\n    const data = await response.json();\n    const results = await data.data.results;\n    const totalPages = await data.data.total;\n\n    Object.assign(options, {totalPages})\n\n    dispatch({\n        type: FETCH_DATA_ACTION,\n        data: results,\n        options\n    });\n}\n\nexport const fetchSingleItem = (name, id) => async dispatch => {\n    const response = await fetch(`https://gateway.marvel.com/v1/public/${name}/${id}?apikey=${API_KEY}&ts=${ts}&hash=${hash}`);\n    const data = await response.json();\n    const results = await data.data.results[0];\n\n    dispatch({\n        type: FETCH_SINGLE_ITEM_ACTION,\n        data: results\n    });\n}\n\nexport const fetchSearchedData = (type, name) => async dispatch => {\n    const response = await fetch(`https://gateway.marvel.com/v1/public/${type}?name=${name}&apikey=${API_KEY}&ts=${ts}&hash=${hash}`);\n    const data = await response.json();\n    const results = await data.data.results[0];\n\n    dispatch({\n        type: FETCH_SEARCHED_DATA_ACTION,\n        data: results\n    });\n};\n\nexport const fetchAdditionalData = (name, id) => async dispatch => {\n    const response = await fetch(`https://gateway.marvel.com/v1/public/${name}/${id}?apikey=${API_KEY}&ts=${ts}&hash=${hash}`);\n    const data = await response.json();\n    const results = await data.data.results[0];\n\n    dispatch({\n        type: FETCH_ADDITIONAL_INFO_ACTION,\n        data: results\n    });\n}","export const FETCH_DATA_ACTION = 'FETCH_DATA_ACTION';\nexport const FETCH_SINGLE_ITEM_ACTION = 'FETCH_SINGLE_ITEM_ACTION';\nexport const FETCH_SEARCHED_DATA_ACTION = 'FETCH_SEARCHED_DATA_ACTION';\nexport const FETCH_ADDITIONAL_INFO_ACTION = 'FETCH_ADDITIONAL_INFO_ACTION';","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Link } from 'react-router-dom';\n\nexport const Button = (props) => (\n    <div>\n    {props.external ? <a href={props.link} className=\"btn red darken-3 waves-effect\" target=\"_blank\" rel=\"noopener noreferrer\">{props.text}</a> :\n    <Link to={props.link} className=\"btn red darken-3 waves-effect\" target={props.target}>{props.text}</Link>}\n    </div>\n);\n\nButton.propTypes = {\n    link: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '../../UI/Button/Button';\n\nexport const CharactersCard = ({character}) => (\n    <div className=\"col s12 m6 l3\">\n        <div className=\"card\">\n            <div className=\"card-image\">\n                <img src={`${character.thumbnail.path}/landscape_incredible.${character.thumbnail.extension}`} alt={character.name}></img>\n                <span className='card-title'>{character.name}</span>\n            </div>\n            <div className='card-action'>\n                <Button text={'Learn More'} link ={`characters/${character.id}`}></Button>\n            </div>\n        </div>\n    </div>\n);\n\nCharactersCard.propTypes = {\n    character: PropTypes.object.isRequired\n};\n","import React from 'react';\n\nimport './Loader.css';\n\nexport const Loader = () => (\n    <div className=\"loader\"></div>\n);","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { fetchData } from '../../../redux/actions/dataActions';\n\nimport { CharactersCard }  from '../Card/Card';\nimport { Loader } from '../../UI/Loader/Loader.jsx';\n \nimport Pagination from 'rc-pagination';\nimport 'rc-pagination/assets/index.css';\n\n\nclass CharactersList extends Component {\n    componentDidMount() {\n        this.fetchData();\n    }\n    fetchData(page) {\n        this.props.fetchData('characters', { page });\n        window.scrollTo(0, 0);\n    }\n    render() {\n        const { characters, options } = this.props;\n\n        return (\n            <div>\n                <div className=\"row\">{characters ? characters.map((character) => {\n                    return <CharactersCard character={character} key={character.id}/>;\n                }) : <Loader />}</div>\n                {options.count && <Pagination current={options.page || 1} total={options.totalPages} pageSize={options.count} onChange={(page) => this.fetchData(page)}/>};\n            </div>\n        );\n    }\n}\n\nCharactersList.propTypes = {\n    fetchData: PropTypes.func.isRequired,\n    characters: PropTypes.array.isRequired,\n    options: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    characters: state.data.data,\n    options: state.data.options\n});\n\nexport default connect(mapStateToProps, { fetchData })(CharactersList);","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const SearchInput = ({value, onChangeValue, onSubmit}) => (\n    <div className=\"input-field\">\n        <form onSubmit={(e) => onSubmit(e)}>\n            <input id=\"search\" type=\"text\" value={value} onChange={(e) => onChangeValue(e)}></input>\n            <button type=\"submit\" className=\"btn waves-effect\">Search</button>\n        </form>\n    </div>\n);\n\nSearchInput.propTypes = {\n    value: PropTypes.string.isRequired,\n    onChangeValue: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired\n};","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { fetchSearchedData, fetchData } from '../../../redux/actions/dataActions';\n\nimport { SearchInput } from '../../UI/SearchInput/SearchInput';\n\nclass searchInputContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputValue: ''\n        };\n    }\n    onChangeValue(e) {\n        this.setState({\n            inputValue: e.target.value\n        });\n        if(!e.target.value) {\n            this.props.fetchData(this.props.type);\n        }\n    }\n    onSubmit(e) {\n        e.preventDefault();\n        this.props.fetchSearchedData(this.props.type, this.state.inputValue);\n    }\n    render() {\n        return (\n            <SearchInput value={this.state.inputValue} onChangeValue={(e) => this.onChangeValue(e)} onSubmit={(e) => this.onSubmit(e)}/>\n        );\n    }\n}\n\nsearchInputContainer.propTypes = {\n    fetchSearchedData: PropTypes.func.isRequired,\n    fetchData: PropTypes.func.isRequired,\n    searched: PropTypes.array,\n    type: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n    searched: state.data.data\n});\n\nexport default connect(mapStateToProps, { fetchSearchedData, fetchData })(searchInputContainer);","import React, { Component } from 'react';\nimport CharactersList from '../../../components/Characters/List/List';\nimport { Navbar } from '../../../components/UI/Navbar/Navbar';\nimport SearchInputContainer from '../../../components/common/searchInputContainer/searchInputContainer';\n\nexport class ScreensCharactersList extends Component {\n    render() {\n        return (\n            <div>\n                <Navbar text={'Characters'}/>\n                <SearchInputContainer type={'characters'}/>\n                <CharactersList />\n            </div>\n        );\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Card.css';\n\nimport { Button } from '../../../UI/Button/Button';\n\n\nexport const DetailedCard = ({character, onGetData}) => (\n    <div className=\"row\">\n        <div className=\"col s12 m6\">\n            <h4>{character.name}</h4>\n            <div className=\"character__image\">\n                <img src={`${character.thumbnail.path}.${character.thumbnail.extension}`} alt={character.name}></img>\n            </div>\n            {!!character.comics.available && <div className=\"comics\">\n                <ul className=\"collection with-header\">\n                    <li className=\"collection-header\"><h4>Comics</h4></li>\n                    {character.comics.items.map(comic => {\n                        return (<a href='#' onClick={(e) => onGetData(comic.resourceURI, 'comics', e)} className=\"collection-item\" key={comic.name}>{comic.name}</a>);\n                    })}\n                </ul>\n            </div>}\n            {!!character.urls && !!character.urls.length && <div>\n                <div className=\"character__actions\">\n                    {character.urls.map(url => {\n                        return <Button text={url.type} link={url.url} key={url.url} external={true}></Button>;\n                    })}\n                </div>\n            </div>}\n        </div>\n        <div className=\"col s12 m6\">\n            {!!character.events.available && <div className=\"events\">\n                <ul className=\"collection with-header\">\n                    <li className=\"collection-header\"><h4>Events</h4></li>\n                    {character.events.items.map(event => {\n                        return (<a className=\"collection-item\" key={event.name} href={event.resourceURI}>{event.name}</a>);\n                    })}\n                </ul>\n            </div>}\n            {!!character.series.available && <div className=\"series\">\n                <ul className=\"collection with-header\">\n                    <li className=\"collection-header\"><h4>Series</h4></li>\n                    {character.series.items.map(series => {\n                        return (<a className=\"collection-item\" key={series.name} href={series.resourceURI}>{series.name}</a>);\n                    })}\n                </ul>\n            </div>}\n            {!!character.stories.available && <div className=\"stories\">\n                <ul className=\"collection with-header\">\n                    <li className=\"collection-header\"><h4>Stories</h4></li>\n                    {character.stories.items.map(story => {\n                        return (\n                            <div  key={story.name + story.type} >\n                                <a  className=\"collection-item\"href={story.resourceURI}>\n                                    {story.name}\n                                    <span  className=\"secondary-content\">{story.type}</span>\n                                </a>\n                            </div>\n                        );\n                    })}\n                </ul>\n            </div>}\n        </div>\n    </div>\n);\n\nDetailedCard.propTypes = {\n    character: PropTypes.object.isRequired,\n    onGetData: PropTypes.func.isRequired\n};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Popup.css';\n\nexport const Popup = ({info, onClosePopup}) => (\n    <div>\n        <div className=\"overlay\" onClick={onClosePopup}></div>\n        <div className=\"popup\">\n            <div className=\"card\">\n                <div className=\"card-image\">\n                    <img src={`${info.thumbnail.path}.${info.thumbnail.extension}`} alt={info.title}></img>\n                    <span className='card-title'>{info.title}</span>\n                </div>\n                <div className=\"card-content\">\n                    <p>{info.description}</p>\n                </div>\n            </div>\n        </div>\n    </div>\n);\n\nPopup.propTypes = {\n    info: PropTypes.object.isRequired,\n    onClosePopup: PropTypes.func.isRequired\n};","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { fetchSingleItem, fetchAdditionalData } from '../../../redux/actions/dataActions';\n\nimport { DetailedCard } from './Card/Card';\nimport { Popup } from '../../UI/Popup/Popup';\n\nclass Character extends Component {\n    state = {\n        popupOpen: false\n    }\n    componentDidMount() {\n        this.props.fetchSingleItem('characters', +this.props.url);\n    }\n    onGetData(url, type, e) {\n        e.preventDefault();\n        const myRegexp = new RegExp(`${type}/(.*)`);\n        const match = myRegexp.exec(url)[1];\n        this.props.fetchAdditionalData(type, match);\n\n        this.setState({\n            popupOpen: true\n        })\n    }\n    onClosePopup = () => {\n        this.setState({\n            popupOpen: false\n        })\n    }\n    render() {\n        const character = this.props.character;\n        const additional = this.props.additional;\n\n        return (\n            <div className=\"row\">\n                <div className=\"col s12\">{character ? <DetailedCard character={character} key={character.id} onGetData={(url, type, e) => this.onGetData(url, type, e)}/> : <span>Loading data</span>}</div>\n                <div>{additional && this.state.popupOpen && <Popup info={additional} onClosePopup={this.onClosePopup}/>}</div>\n            </div>\n        );\n    }\n}\n\nCharacter.propTypes = {\n    fetchSingleItem: PropTypes.func.isRequired,\n    fetchAdditionalData: PropTypes.func.isRequired,\n    character: PropTypes.object,\n    url: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n    character: state.data.item,\n    additional: state.data.additional\n});\n\nexport default connect(mapStateToProps, { fetchSingleItem, fetchAdditionalData })(Character);","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Character from '../../../components/Characters/Detailed/Character';\n\nexport const ScreensCharacter = (props) => (\n    <div>\n        <Character url={props.match.params.id}/>\n    </div>\n);\n\nScreensCharacter.propTypes = {\n    match: PropTypes.object.isRequired\n};\n","import React from 'react';\n\nimport './Footer.css';\n\nexport const Footer = () => (\n    <footer className=\"footer\">\n        <span>Data provided by Marvel. © 2018 MARVEL</span>\n    </footer>\n);","import { FETCH_DATA_ACTION, FETCH_SINGLE_ITEM_ACTION, FETCH_SEARCHED_DATA_ACTION, FETCH_ADDITIONAL_INFO_ACTION } from '../actions/types';\n\nconst initialState = {\n    data: [],\n    item: null,\n    additional: null,\n    options: {}\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case FETCH_DATA_ACTION:\n            return {\n                ...state,\n                data: action.data,\n                options: action.options\n            }\n        case FETCH_SINGLE_ITEM_ACTION:\n            return {\n                ...state,\n                item: action.data\n            }\n        case FETCH_SEARCHED_DATA_ACTION:\n            return {\n                ...state,\n                data: state.data.filter((item) => item.id === action.data.id)\n            }\n        case FETCH_ADDITIONAL_INFO_ACTION:\n        return {\n            ...state,\n            additional: action.data\n        }\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport dataReducer from './dataReducer';\n\nexport default combineReducers({\n    data: dataReducer\n});","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst initialState = {};\nconst middleware = [thunk];\n\nconst store = createStore(rootReducer, initialState, applyMiddleware(...middleware));\n\nexport default store;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '../../UI/Button/Button';\n\nexport const ComicsCard = ({comic}) => (\n    <div className=\"col s12 m6 l3\">\n        <div className=\"card\">\n            <div className=\"card-image\">\n                <img src={`${comic.thumbnail.path}/landscape_incredible.${comic.thumbnail.extension}`} alt={comic.title}></img>\n                    <span className='card-title'>{comic.title}</span>\n                </div>\n                <div className='card-action'>\n                    <Button text={'Learn More'} link ={`comics/${comic.id}`}></Button>\n                </div>\n        </div>\n    </div>\n);\n\nComicsCard.propTypes = {\n    comic: PropTypes.object.isRequired\n};\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { fetchData } from '../../../redux/actions/dataActions';\n\nimport { ComicsCard } from '../Card/Card';\n\nimport Pagination from 'rc-pagination';\nimport 'rc-pagination/assets/index.css';\n\nclass ComicsList extends Component {\n    componentDidMount() {\n        this.fetchData();\n    }\n    fetchData(page) {\n        this.props.fetchData('comics', {page});\n        window.scrollTo(0, 0);\n    }\n    render() {\n        const {comics, options} = this.props;\n\n        return (\n            <div>\n                <div className=\"row\">{comics ? comics.map((comic) => {\n                    return <ComicsCard comic={comic} key={comic.id}/>;\n                }) : <span>Loading data</span>}</div>\n                {options.count && <Pagination current={options.page || 1} total={options.totalPages} pageSize={options.count} onChange={(page) => this.fetchData(page)}/>};\n            </div>\n        );\n    }\n}\n\nComicsList.propTypes = {\n    fetchData: PropTypes.func.isRequired,\n    comics: PropTypes.array.isRequired,\n    options: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    comics: state.data.data,\n    options: state.data.options\n});\n\nexport default connect(mapStateToProps, { fetchData })(ComicsList);","import React, { Component } from 'react';\nimport ComicsList from '../../../components/Comics/List/List';\nimport { Navbar } from '../../../components/UI/Navbar/Navbar';\n\nexport class ScreensComicsList extends Component {\n    render() {\n        return (\n            <div>\n                <Navbar text={'Comics'}/>\n                <ComicsList />\n            </div>\n        );\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// import './Card.css';\n\nimport { Button } from '../../../UI/Button/Button';\n\nexport const DetailedCard = ({comic}) => (\n    <div className=\"card\">\n        <div className=\"card-main\">\n            <span className=\"card-title\">{comic.name}</span>\n            <div className=\"card-image\">\n                <img src={`${comic.thumbnail.path}.${comic.thumbnail.extension}`} alt={comic.name}></img>\n            </div>\n            <p>{comic.description}</p>\n            <span>Format: {comic.format}</span>\n            <br></br>\n            <span>Page count: {comic.pageCount}</span>\n            <br></br>\n            <span>Issue Number: {comic.issueNumber}</span>\n        </div>\n        <div className=\"card-content\">\n            {!!comic.characters.available && <div className=\"characters\">\n                <ul className=\"collection with-header\">\n                    <li className=\"collection-header\"><h4>Characters</h4></li>\n                    {comic.characters.items.map(character => {\n                        return (<a className=\"collection-item\" key={character.name} href={character.resourceURI}>{character.name}</a>);\n                    })}\n                </ul>\n            </div>}\n            {!!comic.events.available && <div className=\"events\">\n                <ul className=\"collection with-header\">\n                    <li className=\"collection-header\"><h4>Events</h4></li>\n                    {comic.events.items.map(event => {\n                        return (<a className=\"collection-item\" key={event.name} href={event.resourceURI}>{event.name}</a>);\n                    })}\n                </ul>\n            </div>}\n            {!!comic.series.available && <div className=\"series\">\n                <ul className=\"collection with-header\">\n                    <li className=\"collection-header\"><h4>Series</h4></li>\n                    <a className=\"collection-item\" key={comic.series.name} href={comic.series.resourceURI}>{comic.series.name}</a>\n                </ul>\n            </div>}\n            {!!comic.stories.available && <div className=\"stories\">\n                <ul className=\"collection with-header\">\n                    <li className=\"collection-header\"><h4>Stories</h4></li>\n                    {comic.stories.items.map(story => {\n                        return (\n                            <div  key={story.name} >\n                                <a  className=\"collection-item\"href={story.resourceURI}>\n                                    {story.name}\n                                    <span  className=\"secondary-content\">{story.type}</span>\n                                </a>\n                            </div>\n                        );\n                    })}\n                </ul>\n            </div>}\n        </div>\n        {!!comic.urls && !!comic.urls.length && <div className=\"card-action\">\n            <div className=\"comic__actions\">\n                {comic.urls.map(url => {\n                    return <Button text={url.type} link={url.url} key={url.url}></Button>;\n                })}\n            </div>\n        </div>}\n    </div>\n);\n\nDetailedCard.propTypes = {\n    comic: PropTypes.object.isRequired\n};","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { fetchSingleItem } from '../../../redux/actions/dataActions';\n\nimport { DetailedCard } from './Card/Card';\n\nclass Comic extends Component {\n    componentDidMount() {\n        this.props.fetchSingleItem('comics', +this.props.url);\n    }\n    render() {\n        const comic = this.props.comic;\n\n        return (\n            <div className=\"row\">\n                <div className=\"col s12 \">{comic ? <DetailedCard comic={comic} key={comic.id}/> : <span>Loading data</span>}</div>\n            </div>\n        );\n    }\n}\n\nComic.propTypes = {\n    fetchSingleItem: PropTypes.func.isRequired,\n    comic: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n    comic: state.data.item\n});\n\nexport default connect(mapStateToProps, { fetchSingleItem })(Comic);","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Comic from '../../../components/Comics/Detailed/Comic';\n\nexport const ScreensComic = (props) => (\n    <div>\n        <Comic url={props.match.params.id}/>\n    </div>\n);\n\nScreensComic.propTypes = {\n    match: PropTypes.object.isRequired\n};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '../../UI/Button/Button';\n\n// import styles from './Card.module.css';\n\nexport const CreatorsCard = ({creator}) => (\n    <div className=\"col s12 m6 l3\">\n    <div className=\"card\">\n        <div className=\"card-image\">\n            <img src={`${creator.thumbnail.path}/landscape_incredible.${creator.thumbnail.extension}`} alt={creator.fullName}></img>\n            <span className='card-title truncate'>{creator.fullName}</span>\n            </div>\n            <div className='card-action'>\n                <Button text={'Learn More'} link ={`creators/${creator.id}`}></Button>\n            </div>\n        </div>\n    </div>\n);\n\nCreatorsCard.propTypes = {\n    creator: PropTypes.object.isRequired\n};\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { fetchData } from '../../../redux/actions/dataActions';\n\nimport { CreatorsCard }  from '../Card/Card';\n\nimport Pagination from 'rc-pagination';\nimport 'rc-pagination/assets/index.css';\n\nclass CreatorsList extends Component {\n    componentDidMount() {\n        this.fetchData();\n    }\n    fetchData(page) {\n        this.props.fetchData('creators', {page});\n        window.scrollTo(0, 0);\n    }\n    render() {\n        const {creators, options} = this.props;\n\n        return (\n            <div>\n            <div className=\"row\">{creators ? creators.map((creator) => {\n                return <CreatorsCard creator={creator} key={creator.id}/>;\n            }) : <span>Loading data</span>}</div>\n                {options.count && <Pagination current={options.page || 1} total={options.totalPages} pageSize={options.count} onChange={(page) => this.fetchData(page)}/>};\n            </div>\n        );\n    }\n}\n\nCreatorsList.propTypes = {\n    fetchData: PropTypes.func.isRequired,\n    creators: PropTypes.array.isRequired,\n    options: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    creators: state.data.data,\n    options: state.data.options\n});\n\nexport default connect(mapStateToProps, { fetchData })(CreatorsList);","import React, { Component } from 'react';\nimport CreatorsList from '../../../components/Creators/List/List';\nimport { Navbar } from '../../../components/UI/Navbar/Navbar';\n\nexport class ScreensCreatorsList extends Component {\n    render() {\n        return (\n            <div>\n                <Navbar text={'Creators'}/>\n                <CreatorsList />\n            </div>\n        );\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// import './Card.css';\n\nimport { Button } from '../../../UI/Button/Button';\n\nexport const DetailedCard = ({creator}) => (\n    <div className=\"card\">\n        <div className=\"card-main\">\n            <span className=\"card-title\">{creator.fullName}</span>\n            <div className=\"card-image\">\n                <img src={`${creator.thumbnail.path}.${creator.thumbnail.extension}`} alt={creator.fullName}></img>\n            </div>\n        </div>\n        <div className=\"card-content\">\n            {!!creator.comics.available && <div className=\"comics\">\n                <ul className=\"collection with-header\">\n                    <li className=\"collection-header\"><h4>Comics</h4></li>\n                    {creator.comics.items.map(comic => {\n                        return (<a className=\"collection-item\" key={comic.name} href={comic.resourceURI}>{comic.name}</a>);\n                    })}\n                </ul>\n            </div>}\n            {!!creator.events.available && <div className=\"events\">\n                <ul className=\"collection with-header\">\n                    <li className=\"collection-header\"><h4>Events</h4></li>\n                    {creator.events.items.map(event => {\n                        return (<a className=\"collection-item\" key={event.name} href={event.resourceURI}>{event.name}</a>);\n                    })}\n                </ul>\n            </div>}\n            {!!creator.series.available && <div className=\"series\">\n                <ul className=\"collection with-header\">\n                    <li className=\"collection-header\"><h4>Series</h4></li>\n                    {creator.series.items.map(series => {\n                        return (<a className=\"collection-item\" key={series.name} href={series.resourceURI}>{series.name}</a>);\n                    })}\n                </ul>\n            </div>}\n            {!!creator.stories.available && <div className=\"stories\">\n                <ul className=\"collection with-header\">\n                    <li className=\"collection-header\"><h4>Stories</h4></li>\n                    {creator.stories.items.map(story => {\n                        return (\n                            <div  key={story.name} >\n                                <a  className=\"collection-item\"href={story.resourceURI}>\n                                    {story.name}\n                                    <span  className=\"secondary-content\">{story.type}</span>\n                                </a>\n                            </div>\n                        );\n                    })}\n                </ul>\n            </div>}\n        </div>\n        {!!creator.urls && !!creator.urls.length && <div className=\"card-action\">\n            <div className=\"creator__actions\">\n                {creator.urls.map(url => {\n                    return <Button text={url.type} link={url.url} key={url.url}></Button>;\n                })}\n            </div>\n        </div>}\n    </div>\n);\n\nDetailedCard.propTypes = {\n    creator: PropTypes.object.isRequired\n};","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { fetchSingleItem } from '../../../redux/actions/dataActions';\n\nimport { DetailedCard } from './Card/Card';\n\nclass Creator extends Component {\n    componentDidMount() {\n        this.props.fetchSingleItem('creators', +this.props.url);\n    }\n    render() {\n        const creator = this.props.creator;\n\n        return (\n            <div className=\"row\">\n                <div className=\"col s12 \">{creator ? <DetailedCard creator={creator} key={creator.id}/> : <span>Loading data</span>}</div>\n            </div>\n        );\n    }\n}\n\nCreator.propTypes = {\n    fetchSingleItem: PropTypes.func.isRequired,\n    creator: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n    creator: state.data.item\n});\n\nexport default connect(mapStateToProps, { fetchSingleItem })(Creator);","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Creator from '../../../components/Creators/Detailed/Creator';\n\nexport const ScreensCreator = (props) => (\n    <div>\n        <Creator url={props.match.params.id}/>\n    </div>\n);\n\nScreensCreator.propTypes = {\n    match: PropTypes.object.isRequired\n};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '../../UI/Button/Button';\n\n// import styles from './Card.module.css';\n\n\nexport const EventsCard = ({event}) => (\n    <div className=\"col s12 m6 l3\">\n    <div className=\"card\">\n        <div className=\"card-image\">\n            <img src={`${event.thumbnail.path}/landscape_incredible.${event.thumbnail.extension}`} alt={event.title}></img>\n            <span className='card-title truncate'>{event.title}</span>\n            </div>\n            <div className='card-action'>\n                <Button text={'Learn More'} link ={`events/${event.id}`}></Button>\n            </div>\n        </div>\n    </div>\n);\n\nEventsCard.propTypes = {\n    event: PropTypes.object.isRequired\n};\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { fetchData } from '../../../redux/actions/dataActions';\n\nimport { EventsCard }  from '../Card/Card';\n\nimport Pagination from 'rc-pagination';\nimport 'rc-pagination/assets/index.css';\n\nclass EventsList extends Component {\n    componentDidMount() {\n        this.fetchData();\n    }\n    fetchData(page) {\n        this.props.fetchData('events', {page});\n        window.scrollTo(0, 0);\n    }\n    render() {\n        const {events, options} = this.props;\n\n        return (\n            <div>\n                <div className=\"row\">{events ? events.map((event) => {\n                    return <EventsCard event={event} key={event.id}/>;\n                }) : <span>Loading data</span>}</div>\n                {options.count && <Pagination current={options.page || 1} total={options.totalPages} pageSize={options.count} onChange={(page) => this.fetchData(page)}/>};\n            </div>\n        );\n    }\n}\n\nEventsList.propTypes = {\n    fetchData: PropTypes.func.isRequired,\n    events: PropTypes.array.isRequired,\n    options: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    events: state.data.data,\n    options: state.data.options\n});\n\nexport default connect(mapStateToProps, { fetchData })(EventsList);","import React, { Component } from 'react';\nimport EventsList from '../../../components/Events/List/List';\nimport { Navbar } from '../../../components/UI/Navbar/Navbar';\n\nexport class ScreensEventsList extends Component {\n    render() {\n        return (\n            <div>\n                <Navbar text={'Events'}/>\n                <EventsList />\n            </div>\n        );\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// import './Card.css';\n\nimport { Button } from '../../../UI/Button/Button';\n\n\nexport const DetailedCard = ({event}) => (\n    <div className=\"card\">\n        <div className=\"card-main\">\n            <span className=\"card-title\">{event.title}</span>\n            <div className=\"card-image\">\n                <img src={`${event.thumbnail.path}.${event.thumbnail.extension}`} alt={event.title}></img>\n            </div>\n        </div>\n        <div className=\"card-content\">\n            {!!event.comics.available && <div className=\"comics\">\n                <ul className=\"collection with-header\">\n                    <li className=\"collection-header\"><h4>Comics</h4></li>\n                    {event.comics.items.map(comic => {\n                        return (<a className=\"collection-item\" key={comic.name} href={comic.resourceURI}>{comic.name}</a>);\n                    })}\n                </ul>\n            </div>}\n            {!!event.creators.available && <div className=\"creators\">\n                <ul className=\"collection with-header\">\n                    <li className=\"collection-header\"><h4>Creators</h4></li>\n                    {event.creators.items.map(creator => {\n                        return (<a className=\"collection-item\" key={creator.name} href={creator.resourceURI}>{creator.name} ({creator.role})</a>);\n                    })}\n                </ul>\n            </div>}\n            {!!event.series.available && <div className=\"series\">\n                <ul className=\"collection with-header\">\n                    <li className=\"collection-header\"><h4>Series</h4></li>\n                    {event.series.items.map(series => {\n                        return (<a className=\"collection-item\" key={series.name} href={series.resourceURI}>{series.name}</a>);\n                    })}\n                </ul>\n            </div>}\n            {!!event.stories.available && <div className=\"stories\">\n                <ul className=\"collection with-header\">\n                    <li className=\"collection-header\"><h4>Stories</h4></li>\n                    {event.stories.items.map(story => {\n                        return (\n                            <div  key={story.name + story.type} >\n                                <a  className=\"collection-item\"href={story.resourceURI}>\n                                    {story.name}\n                                    <span  className=\"secondary-content\">{story.type}</span>\n                                </a>\n                            </div>\n                        );\n                    })}\n                </ul>\n            </div>}\n        </div>\n        {!!event.urls && !!event.urls.length && <div className=\"card-action\">\n            <div className=\"event__actions\">\n                {event.urls.map(url => {\n                    return <Button text={url.type} link={url.url} key={url.url}></Button>;\n                })}\n            </div>\n        </div>}\n    </div>\n);\n\nDetailedCard.propTypes = {\n    event: PropTypes.object.isRequired\n};","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { fetchSingleItem } from '../../../redux/actions/dataActions';\n\nimport { DetailedCard } from './Card/Card';\n\nclass Event extends Component {\n    componentDidMount() {\n        this.props.fetchSingleItem('events', +this.props.url);\n    }\n    render() {\n        const event = this.props.event;\n\n        return (\n            <div className=\"row\">\n                <div className=\"col s12 \">{event ? <DetailedCard event={event} key={event.id}/> : <span>Loading data</span>}</div>\n            </div>\n        );\n    }\n}\n\nEvent.propTypes = {\n    fetchSingleItem: PropTypes.func.isRequired,\n    event: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n    event: state.data.item\n});\n\nexport default connect(mapStateToProps, { fetchSingleItem })(Event);","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Event from '../../../components/Events/Detailed/Event';\n\nexport const ScreensEvent = (props) => (\n    <div>\n        <Event url={props.match.params.id}/>\n    </div>\n);\n\nScreensEvent.propTypes = {\n    match: PropTypes.object.isRequired\n};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '../../UI/Button/Button';\n\n// import styles from './Card.module.css';\n\n\nexport const StoriesCard = ({story}) => (\n    <div className=\"col s12 m6 l3\">\n    <div className=\"card\">\n        <div className=\"card-content\">\n            <p>{story.title}</p>\n        </div>\n        <div className=\"card-action\">\n            <Button text={'Learn More'} link ={`stories/${story.id}`}></Button>\n        </div>\n        </div>\n    </div>\n);\n\nStoriesCard.propTypes = {\n    story: PropTypes.object.isRequired\n};\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { fetchData } from '../../../redux/actions/dataActions';\n\nimport { StoriesCard }  from '../Card/Card';\n\nimport Pagination from 'rc-pagination';\nimport 'rc-pagination/assets/index.css';\n\nclass StoriesList extends Component {\n    componentDidMount() {\n        this.fetchData();\n    }\n    fetchData(page) {\n        this.props.fetchData('stories', {page});\n        window.scrollTo(0, 0);\n    }\n    render() {\n        const {stories, options} = this.props;\n\n        return (\n            <div>\n                <div className=\"row\">{stories ? stories.map((story) => {\n                    return <StoriesCard story={story} key={story.id}/>;\n                }) : <span>Loading data</span>}</div>\n                {options.count && <Pagination style={{ margin: '100px' }} current={options.page || 1} total={options.totalPages} pageSize={options.count} onChange={(page) => this.fetchData(page)}/>};\n            </div>\n        );\n    }\n}\n\nStoriesList.propTypes = {\n    fetchData: PropTypes.func.isRequired,\n    stories: PropTypes.array.isRequired,\n    options: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    stories: state.data.data,\n    options: state.data.options\n});\n\nexport default connect(mapStateToProps, { fetchData })(StoriesList);","import React, { Component } from 'react';\nimport StoriesList from '../../../components/Stories/List/List';\nimport { Navbar } from '../../../components/UI/Navbar/Navbar';\n\nexport class ScreensStoriesList extends Component {\n    render() {\n        return (\n            <div>\n                <Navbar text={'Stories'}/>\n                <StoriesList />\n            </div>\n        );\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// import './Card.css';\n\nexport const DetailedCard = ({story}) => (\n    <div className=\"card\">\n        <div className=\"card-main\">\n            <span className=\"card-title\">{story.title} {story.type}</span>\n            <div>\n                Original issue <a href={story.originalIssue.resourceURI}>{story.originalIssue.name}</a>\n            </div>\n        </div>\n        <div className=\"card-content\">\n            {!!story.comics.available && <div className=\"comics\">\n                <ul className=\"collection with-header\">\n                    <li className=\"collection-header\"><h4>Comics</h4></li>\n                    {story.comics.items.map(comic => {\n                        return (<a className=\"collection-item\" key={comic.name} href={comic.resourceURI}>{comic.name}</a>);\n                    })}\n                </ul>\n            </div>}\n            {!!story.creators.available && <div className=\"creators\">\n                <ul className=\"collection with-header\">\n                    <li className=\"collection-header\"><h4>Creators</h4></li>\n                    {story.creators.items.map(creator => {\n                        return (<a className=\"collection-item\" key={creator.name} href={creator.resourceURI}>{creator.name} ({creator.role})</a>);\n                    })}\n                </ul>\n            </div>}\n            {!!story.series.available && <div className=\"series\">\n                <ul className=\"collection with-header\">\n                    <li className=\"collection-header\"><h4>Series</h4></li>\n                    {story.series.items.map(series => {\n                        return (<a className=\"collection-item\" key={series.name} href={series.resourceURI}>{series.name}</a>);\n                    })}\n                </ul>\n            </div>}\n            {!!story.characters.available && <div className=\"characters\">\n                <ul className=\"collection with-header\">\n                    <li className=\"collection-header\"><h4>Characters</h4></li>\n                    {story.characters.items.map(character => {\n                        return (<a className=\"collection-item\" key={character.name} href={character.resourceURI}>{character.name}</a>);\n                    })}\n                </ul>\n            </div>}\n        </div>\n    </div>\n);\n\nDetailedCard.propTypes = {\n    story: PropTypes.object.isRequired\n};","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { fetchSingleItem } from '../../../redux/actions/dataActions';\n\nimport { DetailedCard } from './Card/Card';\n\nclass Story extends Component {\n    componentDidMount() {\n        this.props.fetchSingleItem('stories', +this.props.url);\n    }\n    render() {\n        const story = this.props.story;\n\n        return (\n            <div className=\"row\">\n                <div className=\"col s12 \">{story ? <DetailedCard story={story} key={story.id}/> : <span>Loading data</span>}</div>\n            </div>\n        );\n    }\n}\n\nStory.propTypes = {\n    fetchSingleItem: PropTypes.func.isRequired,\n    story: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n    story: state.data.item\n});\n\nexport default connect(mapStateToProps, { fetchSingleItem })(Story);","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Story from '../../../components/Stories/Detailed/Story';\n\nexport const ScreensStory = (props) => (\n    <div>\n        <Story url={props.match.params.id}/>\n    </div>\n);\n\nScreensStory.propTypes = {\n    match: PropTypes.object.isRequired\n};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '../../UI/Button/Button';\n\n// import styles from './Card.module.css';\n\nexport const SeriesCard = ({series}) => (\n    <div className=\"col s12 m6 l3\">\n      <div className=\"card\">\n          <div className=\"card-image\">\n            <img src={`${series.thumbnail.path}/landscape_incredible.${series.thumbnail.extension}`} alt={series.title}></img>\n            <span className=\"card-title\">{series.title}</span>\n          </div>\n          <div className=\"card-action\">\n            <Button text={'Learn More'} link ={`series/${series.id}`}></Button>\n          </div>\n        </div>\n      </div>\n);\n\nSeriesCard.propTypes = {\n    series: PropTypes.object.isRequired\n};\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { fetchData } from '../../../redux/actions/dataActions';\n\nimport { SeriesCard }  from '../Card/Card';\n\nimport Pagination from 'rc-pagination';\nimport 'rc-pagination/assets/index.css';\n\nclass SeriesList extends Component {\n    componentDidMount() {\n        this.fetchData();\n    }\n    fetchData(page) {\n        this.props.fetchData('series', {page});\n        window.scrollTo(0, 0);\n    }\n    render() {\n        const {series, options} = this.props;\n\n        return (\n            <div>\n                <div className=\"row\">{series ? series.map((series) => {\n                    return <SeriesCard series={series} key={series.id}/>;\n                }) : <span>Loading data</span>}</div>\n                {options.count && <Pagination current={options.page || 1} total={options.totalPages} pageSize={options.count} onChange={(page) => this.fetchData(page)}/>};\n            </div>\n        );\n    }\n}\n\nSeriesList.propTypes = {\n    fetchData: PropTypes.func.isRequired,\n    series: PropTypes.array.isRequired,\n    options: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    series: state.data.data,\n    options: state.data.options\n});\n\nexport default connect(mapStateToProps, { fetchData })(SeriesList);","import React, { Component } from 'react';\nimport SeriesList from '../../../components/Series/List/List';\nimport { Navbar } from '../../../components/UI/Navbar/Navbar';\n\nexport class ScreensSeriesList extends Component {\n    render() {\n        return (\n            <div>\n                <Navbar text={'Series'}/>\n                <SeriesList />\n            </div>\n        );\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// import './Card.css';\n\nimport { Button } from '../../../UI/Button/Button';\n\nexport const DetailedCard = ({series}) => (\n    <div className=\"card\">\n        <div className=\"card-main\">\n            <span className=\"card-title\">{series.title}</span>\n            <div className=\"card-image\">\n                <img src={`${series.thumbnail.path}.${series.thumbnail.extension}`} alt={series.title}></img>\n            </div>\n        </div>\n        <div className=\"card-content\">\n            {!!series.comics.available && <div className=\"comics\">\n                <ul className=\"collection with-header\">\n                    <li className=\"collection-header\"><h4>Comics</h4></li>\n                    {series.comics.items.map(comic => {\n                        return (<a className=\"collection-item\" key={comic.name} href={comic.resourceURI}>{comic.name}</a>);\n                    })}\n                </ul>\n            </div>}\n            {!!series.creators.available &&  <div className=\"creators\">\n                <ul className=\"collection with-header\">\n                    <li className=\"collection-header\"><h4>Creators</h4></li>\n                    {series.creators.items.map(creator => {\n                        return (<a className=\"collection-item\" key={creator.name} href={creator.resourceURI}>{creator.name} ({creator.role})</a>);\n                    })}\n                </ul>\n            </div>}\n            {!!series.characters.available && <div className=\"characters\">\n                <ul className=\"collection with-header\">\n                    <li className=\"collection-header\"><h4>Characters</h4></li>\n                    {series.characters.items.map(character => {\n                        return (<a className=\"collection-item\" key={character.name} href={character.resourceURI}>{character.name}</a>);\n                    })}\n                </ul>\n            </div>}\n            {!!series.stories.available && <div className=\"stories\">\n                <ul className=\"collection with-header\">\n                    <li className=\"collection-header\"><h4>Stories</h4></li>\n                    {series.stories.items.map(story => {\n                        return (\n                            <div  key={story.name + story.type} >\n                                <a  className=\"collection-item\"href={story.resourceURI}>\n                                    {story.name}\n                                    <span  className=\"secondary-content\">{story.type}</span>\n                                </a>\n                            </div>\n                        );\n                    })}\n                </ul>\n            </div>}\n        </div>\n        {!!series.urls && !!series.urls.length && <div className=\"card-action\">\n            <div className=\"series__actions\">\n                {series.urls.map(url => {\n                    return <Button text={url.type} link={url.url} key={url.url}></Button>;\n                })}\n            </div>\n        </div>}\n    </div>\n);\n\nDetailedCard.propTypes = {\n    series: PropTypes.object.isRequired\n};","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { fetchSingleItem } from '../../../redux/actions/dataActions';\n\nimport { DetailedCard } from './Card/Card';\n\nclass Series extends Component {\n    componentDidMount() {\n        this.props.fetchSingleItem('series', +this.props.url);\n    }\n    render() {\n        const series = this.props.series;\n\n        return (\n            <div className=\"row\">\n                <div className=\"col s12 \">{series ? <DetailedCard series={series} key={series.id}/> : <span>Loading data</span>}</div>\n            </div>\n        );\n    }\n}\n\nSeries.propTypes = {\n    fetchSingleItem: PropTypes.func.isRequired,\n    series: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n    series: state.data.item\n});\n\nexport default connect(mapStateToProps, { fetchSingleItem })(Series);","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Series from '../../../components/Series/Detailed/Series';\n\nexport const ScreensSeries = (props) => (\n    <div>\n        <Series url={props.match.params.id}/>\n    </div>\n);\n\nScreensSeries.propTypes = {\n    match: PropTypes.object.isRequired\n};","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport { ScreensMain } from './Main/Main';\nimport { ScreensCharactersList } from './Characters/List/List';\nimport { ScreensCharacter } from './Characters/Character/Character';\nimport { Footer } from '../components/UI/Footer/Footer';\n\nimport store from '../redux/store/store';\nimport { ScreensComicsList } from './Comics/List/List';\nimport { ScreensComic } from './Comics/Comic/Comic';\nimport { ScreensCreatorsList } from './Creators/List/List';\nimport { ScreensCreator } from './Creators/Creator/Creator';\nimport { ScreensEventsList } from './Events/List/List';\nimport { ScreensEvent } from './Events/Event/Event';\nimport { ScreensStoriesList } from './Stories/List/List';\nimport { ScreensStory } from './Stories/Story/Story';\nimport { ScreensSeriesList } from './Series/List/List';\nimport { ScreensSeries } from './Series/Series/Series';\n\n\nexport const ScreensRoot = () => (\n    <Provider store={store}>\n        <div>\n            <Route path=\"/\" exact component={ScreensMain} />\n            <Route path=\"/characters\" exact component={ScreensCharactersList} />\n            <Route path=\"/characters/:id\" exact component={ScreensCharacter} />\n            <Route path=\"/comics\" exact component={ScreensComicsList} />\n            <Route path=\"/comics/:id\" exact component={ScreensComic} />\n            <Route path=\"/creators\" exact component={ScreensCreatorsList} />\n            <Route path=\"/creators/:id\" exact component={ScreensCreator} />\n            <Route path=\"/events\" exact component={ScreensEventsList} />\n            <Route path=\"/events/:id\" exact component={ScreensEvent} />\n            <Route path=\"/series\" exact component={ScreensSeriesList} />\n            <Route path=\"/series/:id\" exact component={ScreensSeries} />\n            <Route path=\"/stories\" exact component={ScreensStoriesList} />\n            <Route path=\"/stories/:id\" exact component={ScreensStory} />\n            <Footer></Footer>\n        </div>\n    </Provider>\n);","import React, { Component } from 'react';\nimport { ScreensRoot } from './screens/Root';\n\nexport const API_KEY = process.env.REACT_APP_MARVEL_API_KEY;\n\nclass App extends Component {\n    render() {\n        return (\n\n            <ScreensRoot />\n        );\n    }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './styles/global.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, document.getElementById('root'));\nregisterServiceWorker();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app__nav\":\"Navbar_app__nav__1Im2Z\"};"],"sourceRoot":""}